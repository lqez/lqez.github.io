<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Feature creep designer - 2018-12</title><link href="https://lqez.github.io/blog/" rel="alternate"></link><link href="https://lqez.github.io/blog/feeds/2018-12.atom.xml" rel="self"></link><id>https://lqez.github.io/blog/</id><updated>2018-12-26T00:00:00+09:00</updated><entry><title>2018년을 보내며</title><link href="https://lqez.github.io/blog/end-of-2018.html" rel="alternate"></link><published>2018-12-26T00:00:00+09:00</published><updated>2018-12-26T00:00:00+09:00</updated><author><name></name></author><id>tag:lqez.github.io,2018-12-26:/blog/end-of-2018.html</id><summary type="html">&lt;p&gt;2017년은 이전 회사 퇴사와 관련된 &lt;a href="https://lqez.github.io/blog/the-end-is-just-another-beginning.html"&gt;회고&lt;/a&gt;를 적었었다. 그 후로 1년 동안은 아무것도 하지 않고 지내기로 마음먹었었는데, 정말 아무것도 하지 않은 기분이 들어 정리해보기로 했다.&lt;/p&gt;
&lt;h3&gt;1월&lt;/h3&gt;
&lt;p&gt;&lt;img alt="January" src="./images/2018-12/2018-01.jpg"&gt;
사람을 많이 만났다. 다른 회사에 취직할 생각이 없고 당분간은 창업할 생각도 없다고 선언했지만, 그래도 연락해주신 분들과 만나 밥을 먹고 차를 마셨다.
주로 개발 조직을 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;2017년은 이전 회사 퇴사와 관련된 &lt;a href="https://lqez.github.io/blog/the-end-is-just-another-beginning.html"&gt;회고&lt;/a&gt;를 적었었다. 그 후로 1년 동안은 아무것도 하지 않고 지내기로 마음먹었었는데, 정말 아무것도 하지 않은 기분이 들어 정리해보기로 했다.&lt;/p&gt;
&lt;h3&gt;1월&lt;/h3&gt;
&lt;p&gt;&lt;img alt="January" src="./images/2018-12/2018-01.jpg"&gt;
사람을 많이 만났다. 다른 회사에 취직할 생각이 없고 당분간은 창업할 생각도 없다고 선언했지만, 그래도 연락해주신 분들과 만나 밥을 먹고 차를 마셨다.
주로 개발 조직을 꾸리는 고민을 가진 분들과 많이 만났는데, 내 질문은 주로 “왜 개발팀이 필요하다고 생각하세요?” 였다. 별 도움이 되지 않았을 것 같다.
지인 소개로 이재웅 님을 만날 기회를 가져 커뮤니티와 미디어에 대해 질문을 했다. &lt;a href="https://www.instagram.com/dancingjay/"&gt;소개해준 분&lt;/a&gt;에게 감사하고 시간을 내고 (내 생각에는) 솔직하게 답을 준 재웅님께도 감사했다.&lt;/p&gt;
&lt;p&gt;이사를 준비했다. 전세 대출 계약 연장이 안 되어 사채부터 보험 담보 대출까지 온갖 대출을 동시에 받았다. 도와준 분들에게 감사했다. 그리고 이자는 비싸고 쓰리다는 것을 다시 한번 느꼈다. 은행 직원에게 만료 3개월 전부터 연장 여부를 확인했었는데, 된다고 하는 말을 믿은 내가 잘못이었다. 막상 한 달을 남기고는 안된다고 연락이 왔다. 더블 체크로도 모자란 세상이다.&lt;/p&gt;
&lt;p&gt;새로 무언갈 한다면 어떤 이름으로 해야 하나 고민을 했다. 뭘 해야 할 지 뿌옇게 안 보이는 상황에서 어떻게 할지만 생각했다. 그래서 &lt;a href="https://zerobased.co/"&gt;zerobased&lt;/a&gt;라는 이름을 짓고 도메인을 사서 일단 로고만 만들었다. 하지만 아무것도 하지 않으니 아무 일도 일어나지 않았다.&lt;/p&gt;
&lt;h3&gt;2월&lt;/h3&gt;
&lt;p&gt;&lt;img alt="Febuary" src="./images/2018-12/2018-02.jpg"&gt;
2월까지는 그래도 다른 사람들에게서 연락이 왔다. 집을 빼야 하는 날짜와 이사 들어갈 집의 날짜가 한 달 차이가 나서 바깥 생활을 시작했다. 아이가 아직 이전 학교에 다니고 있는데 호텔과 에어비앤비 생활을 하려니 쉽지가 않았다. 매일 아침 눈을 뜰 때마다 영화에서처럼 여기가 어딜까 하는 기분이 들었다. 여행 가방이 모자라 집에서 쓰던 플라스틱 서랍장에 옷을 때려 넣고 차에 싣고 다녔다. 혼자 어디 갈 일이 있어 차를 끌고 나갈 때면 류이치 사카모토의 &lt;a href="https://www.youtube.com/watch?v=pygwK0sBUdM"&gt;Andata&lt;/a&gt;를 크게 반복해서 들었다. 이전까지는 &lt;a href="https://www.youtube.com/watch?v=LGs_vGt0MY8"&gt;Merry Christmas Mr.Lawrence&lt;/a&gt;가 최고라고 생각했는데, 이 시기를 지내며 Andata가 더 깊게 다가왔다. 조금 힘들었다.&lt;/p&gt;
&lt;p&gt;아침에는 아이를 등교시키고, 점심에는 집 인테리어를 살펴보고, 오후에는 사람을 만나고, 저녁에는 아주 조금 코딩하는 생활을 반복했다. 무언가 붕 뜬 기분이 들어 어떤 일도 손에 잡히질 않았다. 사람이 어딘가 정착해서 사는 데에는 다 이유가 있지 싶다.&lt;/p&gt;
&lt;p&gt;백수인데도 불러주는 분이 있어, 산속 깊은 곳에 찾아가서 발표하고 돌아왔다. 처음에는 고사하고 싶었지만, 이렇게 살다가는 정말 어떻게 되겠다 싶어 오는 연락을 거절하지 않고, 누군가 해달라는 일이 있으면 그래도 긍정적으로 생각해보자고 마음먹었다. 그렇게 찾아가는 길에 엄청난 안개를 만났는데 너무 진해서 차 앞 5미터도 보이질 않았다. 어쩐지 인생 같구나, 는 생각을 했다.&lt;/p&gt;
&lt;h3&gt;3월&lt;/h3&gt;
&lt;p&gt;드디어 바깥 생활을 끝내고, 공사가 끝나지 않은 집에 들어갔다. 그것만으로도 무척 감사했다.&lt;/p&gt;
&lt;p&gt;집은 따뜻했다.&lt;/p&gt;
&lt;p&gt;같은 시기에 회사를 나왔던 분들은 다들 이직을 하거나 회사를 차려 다시 자리를 잡고 있었지만 나는 여전히 부유하고 있었다. 누가 그렇게 하라고 한 것은 아니지만 그냥 그랬다. 이제는 더 이상 다른 사람에게서 연락이 오지 않았다. 1월에 하려고 했던 일들은 하나도 하질 않았고 그렇게 시간은 흘러갔다. 그나마 딸이 새 학교에 잘 적응하는 것이 고마웠다.&lt;/p&gt;
&lt;p&gt;명함을 만들었다. 하지만 딱히 쓸 곳이 있지는 않았다.&lt;/p&gt;
&lt;h3&gt;4월&lt;/h3&gt;
&lt;p&gt;&lt;img alt="April" src="./images/2018-12/2018-04.jpg"&gt;
길고양이를 입양했다. 아주 오래전에 살던, 철거가 예정된 &lt;a href="https://movie.daum.net/moviedb/main?movieId=115313"&gt;둔촌주공아파트&lt;/a&gt;에서 구조된 고양이였다. 이름을 짓고 정을 붙이려고 했는데 밖에서 나고 자란지 오래되어 그런가, 야생성이 강해 사람에게 곁을 내주지 않는다. 어쩔 수 없으니 그냥 그렇게 같은 공간에서 적당히 살기로 했다.&lt;/p&gt;
&lt;p&gt;부모님과 같이 살던 어린 시절에 멍멍이를 키우던 이후로 처음으로 반려동물과 함께 하는데, 이 친구는 달라도 너무 달라 낯설었다. 집에서 목욕을 시키려다가 물려서 피가 났다. 포기하고 병원으로 데려가 주사도 맞히고 목욕도 시켰다. 밉다는 생각보다는 앞으로 어떻게 같이 지내야 하나 걱정이 들었다.&lt;/p&gt;
&lt;h3&gt;5월&lt;/h3&gt;
&lt;p&gt;이전 회사의 주식을 정리하면서 많은 것을 배웠다. 사람들은 매우 솔직하면서도 솔직하지 못하다.&lt;/p&gt;
&lt;p&gt;대출을 하나 빼고 모두 정리했다. 이사하는 동안 음악을 함께 듣고, 이케아를 오고 가던 까만 차를 팔았다.&lt;/p&gt;
&lt;p&gt;5월은 조금 슬펐다.&lt;/p&gt;
&lt;h3&gt;6월&lt;/h3&gt;
&lt;p&gt;&lt;img alt="June" src="./images/2018-12/2018-06.jpg"&gt;
아이가 초등학교에 다니는 동안 해외로 여행을 자주 다니자는 얘기를 아내와 했었다. 한국에서 계속 공부하고 대학교를 진학할 예정이라면 앞으로 시간이 별로 없을 거라는 얘기였다. 인정하고 싶지 않지만 인정하지 않을 수 없는 얘기다. 일단 일본 후쿠오카를 다녀왔다. 5월이 지나고 빚에 대한 부담이 줄어들어, 가만히 있을 때도 별생각 없이 차분히 있을 수 있게 된 것을 느꼈다. 이렇게까지 크게 영향을 받고 있었나 매우 놀랐다. 사람들이 정신력이라고 말하는 것의 대부분은 개인의 노력으로 어떻게 되는 게 아니라, 주변 환경에 영향받는 부분이 더 큰 것이 아닐까 하는 생각을 했다.&lt;/p&gt;
&lt;p&gt;내키지 않은 일도 연락을 받았을 때 긍정적으로 생각해보자는 결심을 한 탓에, 한 &lt;a href="https://www.facebook.com/AH2018Seoul/"&gt;해커톤&lt;/a&gt;에 심사위원으로 다녀왔다. 메일에 다른 사람 이름이 적혀 있어 차선책으로 연락이 왔다는 것을 인지했지만, 그냥 궁금하기도 해서 한다고 했다. 크게 방해되는 역할이 아니었기를 바랄 뿐이다.&lt;/p&gt;
&lt;p&gt;아버지가 뇌종양으로 병원에 입원하셨다. 수술이 잘 되어 다행이었다. 병원에 보호자로 있는 동안 하루에 한 캔씩 데자와를 마시는 게 낙이었다. 이 일을 계기로 인생에서 운이 차지하는 것이 더 크다는 것을 다시 한번 인지했다. 백수라서 환자를 보호하고 병원의 여러 일을 처리할 수 있었다. 이것도 운이라면 운일까.&lt;/p&gt;
&lt;h3&gt;7월&lt;/h3&gt;
&lt;p&gt;영국에 다녀왔다. 차를 빌려 2,400km를 운전해서 스코틀랜드까지 한 바퀴를 하고 돌아왔다. 서울에서 타던 차와 같은 차를 빌려 운전했음에도 우핸들은 적응이 쉽지 않았다. 사전 조사를 거의 하지 않고 숙소만 잡아 계속 돌아다녔다. 특별히 하는 일도 없는 사람인데 마음만 바빴는지 준비를 거의 못 했다. 아내 얘기로는 영국은 있을 때보다 다녀오고 나서 더 생각이 많아 난다고 하던데, 나도 그런 것 같다. 어떤 곳이, 어떤 일이 특별히 좋았다는 기억이 선명하지는 않은데, 다시 가보고 싶다.&lt;/p&gt;
&lt;p&gt;마지막 숙소에서 처음으로 영어로 화를 내봤다. 초과 예약 때문인지 지하에 방을 내준 것도 참기 힘들었는데, 그 방이 마침 식당 바로 아래 방이었다. 식당에서는 파티가 열렸는지, 밤 10시에도 천장에서 들리는 시끄러운 음악과 발소리에 참을 수가 없었다. 여행지에서는 좋게좋게 생각해보려고 했지만, 한계를 넘었던 것 같다. 이것도 다 경험이겠지.&lt;/p&gt;
&lt;h3&gt;8월&lt;/h3&gt;
&lt;p&gt;&lt;img alt="August" src="./images/2018-12/2018-08.jpg"&gt;
아무것도 하지 않은 채 반년도 넘게 지나가 버렸다. 정말 뭐라도 하지 않으면 안되는 기분이 들었다. 사실 아무것도 하지 않아도, 뭘 한다고 해도 크게 달라질 만한 일은 없었을 텐데, 처음 돈을 벌었던 2000년 이래로 거의 쉬지 않고 계속해서 어딘가 소속되어 일하다 갑자기 아무것도 하지 않는 상황이 되니 적응을 못 했다. 괜히 불안하다. 멀쩡한 집을 놔두고 밖으로 나돌기 시작했다. 유행하는 협업 공간도 방문해보고 여러 카페도 전전하다 용산 근처의 커피숍에 자리를 잡았다. 오전에 근처에서 밥을 먹고 자리를 잡고 앉아 코딩을 하던 뭘 하던 저녁까지 있는 생활을 반복한다. 일단 그동안 조금씩 기여하던 &lt;a href="https://github.com/summernote/summernote"&gt;오픈소스 프로젝트&lt;/a&gt;를 열심히 해보기로 했다.&lt;/p&gt;
&lt;p&gt;만들고 싶은 것은 조금씩 명확해지는데 시작을 할 수 없었다. 아마 하고 싶은 것을 구체화했을 때 실패하고 비웃음당하는 것이 두려워서 아닐까. 사실 아무도 그렇게 나와 내 일에 관심을 가지고 있지 않다. 내가 뭘 하더래도 아무도 알지 못한다, 그걸 알지만 잘 안된다, 잘 안된다, 하고 싶다, 하고 싶지 않다. 할 수 있는 일은 하고 싶지 않고, 하고 싶은 일은 하지 못한다. 스스로 들어간 우물에서 나오지 못한다.&lt;/p&gt;
&lt;p&gt;생일날이었다. 새벽에 일어나 한강까지 걸어갔다. Andata를 반복해서 듣고 강을 바라보며 죽음에 대해 생각했다. 그렇게 멍청하게 서있다 나를 지나쳐 걸어가는 많은 노인들을 바라보았다. 통행에 방해되는 내가 귀찮다는 느낌이었다. 본래 인간이란 우주의 먼지같은 존재지만 유난히 한 없이 작게 느껴진다.&lt;/p&gt;
&lt;h3&gt;9월&lt;/h3&gt;
&lt;p&gt;간만에 온 연락들을 모두 수락하고 사람들을 만났다. 여전히 같은 이야기를 한다. 말을 계속하면서도 기준만 엄격하고 아무것도 하지 않는 골방 선비 같다는 생각을 한다. 사람들을 만날 때마다 죄책감이 든다. 그래도 만나지 않으면 외롭다. 내가 가고 있는 길이 어딘지도 모르겠고, 어차피 아무 곳으로도 가고 있지 않으니 길이라고 말하는 것조차 부끄럽다.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pycon.jp/2018/"&gt;파이콘 일본&lt;/a&gt;에 다녀왔다. 파이썬 소프트웨어 재단 부스에 앉아 스티커를 나눠주고 &lt;a href="https://www.python.org/psf/membership/"&gt;회원 가입과 후원&lt;/a&gt;을 부탁했다. 같이 숙소를 쓰던 사람과 취해서 들어와 밤늦게까지 코딩을 했다. 침대에 쭈그리고 앉아 커밋을 했다. 새로 고침을 눌렀다. 내 것이 아니라고 생각하니 덜 부담되어 그랬을까, 오랜만에 눈에 보이는 결과물을 만들었다. 왜 내 일은 시작조차 하지 못하는가 자괴감이 들었다. 코딩을 못하는 것도 아니고 하는 것도 아니다. 그래도 여전히 제품 프로그래밍을 할 수 있다는 것을 느꼈다.&lt;/p&gt;
&lt;p&gt;여기가 바닥이었으면 좋겠다.&lt;/p&gt;
&lt;h3&gt;10월&lt;/h3&gt;
&lt;p&gt;&lt;img alt="October" src="./images/2018-12/2018-10.jpg"&gt;
스페인에 다녀왔다. 영국에서 준비가 부족했던 것을 반성하고 이번에는 가이드 투어도 잡고 숙소뿐만 아니라 이동 수단과 관광지를 정리해서 다녀왔다. 한결 나았다. 기차를 타고 이동할 때 식당칸에서 커피를 시켰다. 아내가 흐린 커피를 마시고 싶다고 해서, 흐린 커피를 구글 번역기로 번역했더니 &lt;a href="https://translate.google.com/#view=home&amp;amp;op=translate&amp;amp;sl=ko&amp;amp;tl=es&amp;amp;text=%ED%9D%90%EB%A6%B0%20%EC%BB%A4%ED%94%BC"&gt;&lt;code&gt;Café nublado&lt;/code&gt;&lt;/a&gt;라고 나와, 이걸 직원에게 보여줬더니 옆 사람까지 불러 웃고 난리다. Nublado는 창밖 날씨처럼 흐린, cloudy를 뜻한다고 알려준다. &lt;code&gt;/usr/local/bean&lt;/code&gt;에 이어 두 번째 커피 가게 이름을 얻었다. 언젠가 기회가 되면 써먹고 싶다.&lt;/p&gt;
&lt;p&gt;스페인 남부를 빌린 차로 이동하는데 가족들이 모두 잠들어서, 아이폰에 들어있는, 그동안 자주 듣지 않았던 iTunes에 들어있는 음악을 셔플 재생하고 있을 때였다. &lt;a href="https://www.youtube.com/watch?v=pf_fj45Ftds"&gt;노땐스&lt;/a&gt;를 갑자기 들으니 기분이 묘하다. 처음 이 노래를 듣던 시절에는 인생이 이렇게 흘러갈 줄 알았을까. 고등학교 시절 아르바이트로 돈을 모아 샀던 소니 CD 플레이어로 처음 들었던 때가 생각났다. 등굣길에 가방에 넣고 자전거를 타고 가다 턱에 걸리기라도 하면 튐 방지가 없어 툭 끊기던 CD 플레이어. 다 지나간 일이고, 신해철도 죽어 이 세상에 없고 그의 음악만 남았다.&lt;/p&gt;
&lt;p&gt;시간은 흘러간다. 세금 냈다.&lt;/p&gt;
&lt;h3&gt;11월&lt;/h3&gt;
&lt;p&gt;사람들을 만나 얘기할 때 내가 말하는 시간보다 다른 사람의 얘기를 듣는 시간을 늘리려고 의식적으로 노력했다. 한 번도 인연이 없어 함께한 적 없던 &lt;a href="https://devfest-seoul18.gdg.kr/"&gt;GDG DevFest Seoul&lt;/a&gt;에 자원봉사자로 참여했다. 지난 일 년간 모두 수동적으로, 누군가 만나자고 하면 만나고, 하자고 하면 겨우 하던 것에서 벗어나 처음으로 누군가가 올린 스태프 찾는 글에 먼저 참여하겠다고 연락했다. 의식적으로 일을 피하는 것에서 벗어나 평소에 하지 않던 일을 해야겠다는 생각에서 였을 것이다. 늘 참석하던 모임과는 분위기가 사뭇 달랐지만 그래서 좋았다.&lt;/p&gt;
&lt;p&gt;테슬라 모델X를 시승했다. 역시나 좋은 차였지만 나는 역시 낡은 인간이고, 예전 것을 좋아하는 사람이라는 것을 확인했다. 매끈하고 부드러운 주행은 내가 차에 바라는 것과는 너무 달랐다. 이동 수단으로 생각한다면 좋은 선택이겠지만, 나는 이 글조차 Vim으로 편집하고 있다. 더 나은 것보다는 내가 선호하는 것을 찾아가는 과정이 좋다. 아직은 기계적인 불편함이 존재하는 차를 사고 싶다.&lt;/p&gt;
&lt;h3&gt;12월&lt;/h3&gt;
&lt;p&gt;&lt;img alt="Contribution graph" src="./images/2018-12/2018-graph.png"&gt;
사람들을 만나 무얼 하고 싶은지 얘기를 할 때마다 아이디어가 조금씩 달라지고 구체화되어 간다. 일을 설명하면서 즐겁다. 이 일을 얼마나 오랫동안 생각해왔나 떠올려본다. 일단은 그것으로 만족한다.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.facebook.com/events/323205248518238/"&gt;파이썬 스프린트&lt;/a&gt;를 했다. &lt;a href="https://twitter.com/scari_net"&gt;영근 님&lt;/a&gt;과 3명이라도 오면 좋고, 아무도 오지 않아 단둘이 해도 어쩔 수 없지 않나 얘기했는데, 정말로 딱 세 분이 아침부터 오셔서 같이 이슈를 찾고 패치를 만들었다. 지난 3개월간 최근의 자바스크립트 변경점을 공부하고 오픈소스를 &lt;a href="https://github.com/summernote/summernote/pulse/monthly"&gt;꾸준히 했다&lt;/a&gt;. 아직 프로그래머로 활동할 수 있다는 자신감이 조금 생겼다. 프로그래밍을 아직 할 수 있고, 미약하게나마 남들에게 도움이 될 수 있어 다행이다.&lt;/p&gt;
&lt;p&gt;하지만 이제는 정말 해야 할 것 같다.&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</content></entry><entry><title>크롬 개발자 도구 101</title><link href="https://lqez.github.io/blog/chrome-dev-tool-101.html" rel="alternate"></link><published>2018-12-17T00:00:00+09:00</published><updated>2018-12-17T00:00:00+09:00</updated><author><name></name></author><id>tag:lqez.github.io,2018-12-17:/blog/chrome-dev-tool-101.html</id><summary type="html">&lt;p&gt;&lt;a href="https://github.com/summernote/summernote"&gt;썸머노트&lt;/a&gt;를 개발하며 늘 사용하는 크롬 개발자 도구에 대해 한 번도 제대로 공부해본 적이 없었는데, 마침 아샬(&lt;a href="https://twitter.com/ahastudio"&gt;@ahastudio&lt;/a&gt;)님이 &lt;a href="https://adieu2018.ahastudio.com/"&gt;“아듀 2018”&lt;/a&gt;이라는 일종의 &lt;a href="https://en.wikipedia.org/wiki/Advent_calendar"&gt;Advent Calender&lt;/a&gt;를 주최하는 것을 보고 재미있겠다 싶어 이걸 기회 삼아 크롬 개발자 도구의 기초 내용을 정리해보게 되었다.&lt;/p&gt;
&lt;p&gt;크롬 개발자 도구에 대한 정보는 &lt;a href="https://developers.google.com/web/tools/chrome-devtools/"&gt;https://developers.google.com …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://github.com/summernote/summernote"&gt;썸머노트&lt;/a&gt;를 개발하며 늘 사용하는 크롬 개발자 도구에 대해 한 번도 제대로 공부해본 적이 없었는데, 마침 아샬(&lt;a href="https://twitter.com/ahastudio"&gt;@ahastudio&lt;/a&gt;)님이 &lt;a href="https://adieu2018.ahastudio.com/"&gt;“아듀 2018”&lt;/a&gt;이라는 일종의 &lt;a href="https://en.wikipedia.org/wiki/Advent_calendar"&gt;Advent Calender&lt;/a&gt;를 주최하는 것을 보고 재미있겠다 싶어 이걸 기회 삼아 크롬 개발자 도구의 기초 내용을 정리해보게 되었다.&lt;/p&gt;
&lt;p&gt;크롬 개발자 도구에 대한 정보는 &lt;a href="https://developers.google.com/web/tools/chrome-devtools/"&gt;https://developers.google.com/web/tools/chrome-devtools/&lt;/a&gt; 에서 얻는 것이 가장 정확하고 빠르다. 이 글에서는 웹 서비스를 개발하는데 있어 필수적인 기본 요소만을 간략하게 소개한다.&lt;/p&gt;
&lt;h3&gt;개발자 도구 활성화&lt;/h3&gt;
&lt;p&gt;&lt;img alt="Chrome menu" src="./images/2018-12/chrome-dev-tool-101-menu.png"&gt;
개발자 도구는 크롬 메뉴바에서 개발자 도구를 선택해서 활성화 할 수 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;단축키: &lt;code&gt;⌘ + Shift + I&lt;/code&gt; 또는 &lt;code&gt;Ctrl + Shift + I&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Developer tool" src="./images/2018-12/chrome-dev-tool-101-toolbar.png"&gt;
개발자 도구의 메뉴는 왼쪽부터 차례대로 아래의 기능을 가진다.&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;요소 선택&lt;/h4&gt;
&lt;p&gt;&lt;img alt="Select element" src="./images/2018-12/chrome-dev-tool-101-select.png"&gt;
화면에서 직접 요소를 선택할 수 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;단축키: &lt;code&gt;⌘ + Shift + C&lt;/code&gt; 또는 &lt;code&gt;Ctrl + Shift + C&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;장치 변경&lt;/h4&gt;
&lt;p&gt;&lt;img alt="Device toggle" src="./images/2018-12/chrome-dev-tool-101-device.png"&gt;
현재 크롬이 동작하는 장치가 아닌 다른 휴대 장치와 같은 화면 크기나 설정을 가지도록 변경하여 여러 환경을 테스트할 수 있도록 한다. 특히 안드로이드와 아이폰 등의 여러 모바일 장치의 값이 미리 등록되어 있어, 모바일 장치를 가정하고 테스트할 때 유용하다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;단축키: &lt;code&gt;⌘ + Shift + M&lt;/code&gt; 또는 &lt;code&gt;Ctrl + Shift + M&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;요소 (Elements)&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model"&gt;DOM&lt;/a&gt;(문서 객체 모델, The Document Object Model, 이하 DOM)을 탐색하고 CSS를 확인하며 변경할 수 있다. 주로 화면에 보이는 내용을 확인하고 편집할 때 사용한다. 화면 왼쪽의 DOM을 통해 요소를 탐색할 수 있고, 오른쪽에서는 현재 적용된 CSS 목록과 계산된(computed) 스타일, 이벤트, DOM에 설정된 중단점(breakpoint) 등을 확인할 수 있다.&lt;/p&gt;
&lt;p&gt;선택된 요소에서 우클릭을 하면 컨텍스트 메뉴가 표시되는데, 다음의 기능은 꽤 편리하다.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Context menu" src="./images/2018-12/chrome-dev-tool-101-context-menu.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Force state&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;선택된 요소의 상태를 임의로 변경한다. &lt;code&gt;:active&lt;/code&gt;, &lt;code&gt;:hover&lt;/code&gt;, &lt;code&gt;:visited&lt;/code&gt;와 같은 상태를 임의로 선택하여 버튼 위에 커서가 올라가 있을 때나 링크가 클릭된 경우 등을 가정해볼 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Break on&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;선택한 요소의 속성이 변경되거나, 하위 노드에 변경이 있을 경우 또는 선택된 요소가 삭제될 때에 중단점을 설정해서 확인할 수 있다. 이러한 변경사항은 자바스크립트나 콘솔에서 직접 지정하는것 보다는 이 메뉴를 통해 지정하는 것이 편리하다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Store as global variable&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;해당 요소를 콘솔의 변수로 만들어준다. 콘솔에서 일부 객체를 얻어 작업하기 위해 일일히 &lt;code&gt;document.querySelector()&lt;/code&gt;를 입력하지 않고도 이 기능을 통해 선택된 요소를 &lt;code&gt;temp1&lt;/code&gt;과 같은 변수에 할당이 가능하다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;오른쪽 윈도우에서도 다음의 기능을 알아두면 좋다.&lt;/p&gt;
&lt;h6&gt;스타일 (Styles)&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;필터&lt;/strong&gt; (Filter)
    &lt;img alt="Filter style" src="./images/2018-12/chrome-dev-tool-101-style-filter.png"&gt;&lt;ul&gt;
&lt;li&gt;CSS 속성의 이름을 검색해볼 수 있다. 예를 들어, 검색 필터에 &lt;code&gt;margin&lt;/code&gt;을 입력하면, 선택된 속성에 영향을 주는 여러 CSS 스타일에서 &lt;code&gt;margin&lt;/code&gt; 값만 찾아볼 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;:hov&lt;/code&gt;&lt;/strong&gt; (Toggle Element State)
    &lt;img alt="Toggle Element State" src="./images/2018-12/chrome-dev-tool-101-style-state.png"&gt;&lt;ul&gt;
&lt;li&gt;앞서 언급했던 &lt;code&gt;Force state&lt;/code&gt;와 마찬가지로 선택된 요소의 상태를 임의로 지정할 수 있다. &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;+&lt;/code&gt;&lt;/strong&gt; (New Style Rule)
    &lt;img alt="New Style Rule" src="./images/2018-12/chrome-dev-tool-101-style-newrule.png"&gt;&lt;ul&gt;
&lt;li&gt;선택된 요소의 클래스 이름으로 스타일이 존재하지 않는다면 새로 만들어 지정할 수 있다. 소스 코드상에서 특정 선택자(selector)에 대해 스타일을 지정하지 않은 경우, 개발자 도구에서 임의로 만들어 지정해볼 때 편리하게 사용할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;스타일 계산 결과 (Computed)&lt;/h6&gt;
&lt;p&gt;&lt;img alt="Computed style" src="./images/2018-12/chrome-dev-tool-101-computed.png"&gt;
선택된 요소에 적용된 최종 스타일을 확인할 수 있다. 스타일 필터와 마찬가지로 필터를 통해 원하는 스타일만 추려서 볼 수 있다. 특정 스타일을 확장하면 어떤 선택자들을 통해 최종적으로 연산된 값인지 확인할 수 있다.&lt;/p&gt;
&lt;h4&gt;콘솔 (Console)&lt;/h4&gt;
&lt;p&gt;&lt;img alt="Console" src="./images/2018-12/chrome-dev-tool-101-console.png"&gt;
콘솔을 통해 페이지에 불려진 DOM과 자바스크립트와 상호 작용하며 디버깅할 수 있다. 기본 콘솔에서는 &lt;code&gt;verbose&lt;/code&gt; 수준의 메세지는 표시되지 않아 출력 수준을 변경해야 볼 수 있는데, &lt;code&gt;verbose&lt;/code&gt; 메세지는 개발 도구에서 유용한 내용을 알려주는 경우도 있으니 보는 것이 좋다. 좌상단의 아이콘을 선택해 사이드바를 꺼내면 콘솔 로그를 출력한 주체별로 또는 메세지 레벨별로 나눠서 볼 수 있다. 유닉스의 오래된 단축키 중 하나인 &lt;code&gt;Ctrl + L&lt;/code&gt;을 이제까지의 콘솔 출력을 지우는 단축키로 사용할 수 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;프레임&lt;/strong&gt; (Frames)
    &lt;img alt="Frame" src="./images/2018-12/chrome-dev-tool-101-console-frame.png"&gt;&lt;ul&gt;
&lt;li&gt;콘솔은 한 번에 하나의 프레임을 대상으로만 작동한다. 문서에 &lt;code&gt;iframe&lt;/code&gt; 등으로 포함된 프레임이 추가적으로 존재하면 이 메뉴를 통해 주 프레임이 아닌 다른 프레임과 연결해 작업할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;표현식&lt;/strong&gt; (Expression)
    &lt;img alt="Expression" src="./images/2018-12/chrome-dev-tool-101-console-expression.png"&gt;&lt;ul&gt;
&lt;li&gt;눈 모양의 아이콘을 선택하면 일반적인 디버거에서 제공하는 Watch 기능을 사용할 수 있다. 계속해서 변화하는 값을 모니터링할 때 유용하다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;필터&lt;/strong&gt; (Filter)&lt;ul&gt;
&lt;li&gt;다른 필터 기능과 마찬가지로, 콘솔에 출력된 내용중 지정한 필터에 해당하는 내용만 골라 볼 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;경과 시간 측정&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/ko/docs/Web/API/Console/time"&gt;&lt;code&gt;console.time(label)&lt;/code&gt;&lt;/a&gt;을 통해 특정 작업이 얼마나 걸리는지 편리하게 측정할 수 있다.
&lt;code&gt;console.timeEnd(label)&lt;/code&gt;과 같이 사용하여 두 함수의 호출 사이에 얼마나 시간이 흘렀는지 확인할 수 있다.&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;timer1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="c1"&gt;// (... 무언가 긴 작업 ...)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;timeEnd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;timer1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;timer1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3659.787109375&lt;/span&gt;&lt;span class="nx"&gt;ms&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;소스 (Sources)&lt;/h4&gt;
&lt;p&gt;&lt;img alt="Source" src="./images/2018-12/chrome-dev-tool-101-source.png"&gt;
소스 메뉴에서는 해당 페이지에 로드된 파일들의 목록을 보며 중단점을 설정하며 본격적인 자바스크립트 디버깅이 가능하다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;페이지&lt;/strong&gt; (Page)&lt;ul&gt;
&lt;li&gt;현재 페이지에 로드된 파일 목록을 표시한다. &lt;em&gt;기울어진&lt;/em&gt; 파일 이름은 해당 파일이 컴파일된 소스로부터 &lt;a href="https://developers.google.com/web/tools/chrome-devtools/javascript/source-maps"&gt;소스맵&lt;/a&gt;을 통해 매핑된 파일임을 나타낸다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;파일 시스템&lt;/strong&gt; (Filesystem)
    &lt;img alt="Filesystem" src="./images/2018-12/chrome-dev-tool-101-source-filesystem.png"&gt;&lt;ul&gt;
&lt;li&gt;로컬 디스크의 소스 위치를 지정하면 현재 페이지에 로드된 파일과 매칭하여 디버깅이 가능할 뿐 아니라 바로 편집하는 것도 가능하다. 아이콘의 초록 점은 해당 소스 파일이 소스맵을 통해 매핑된 파일임을 나타낸다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;코드 조각&lt;/strong&gt; (Snippet)
    &lt;img alt="Snippet" src="./images/2018-12/chrome-dev-tool-101-source-snippet.png"&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/"&gt;GitHub Gist&lt;/a&gt;와 같이 코드 조각을 크롬에 저장하고 반복적으로 사용할 수 있다. 이 내용은 크롬에 연결된 사용자 별로 저장되므로 , 서로 다른 사이트에서도 같은 코드 조각 목록을 사용할 수 있다.&lt;/li&gt;
&lt;li&gt;이 내용을 크롬에 연결된 구글 계정과 동기화하여 다른 장치에서도 사용할 수 있도록 하는 기능은 아직 개발되지 않았다. &lt;a href="https://bugs.chromium.org/p/chromium/issues/detail?id=249030"&gt;chromium/249030&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;디버거 창에서는 중단점을 설정하고, 값을 추적하는 등의 기능을 통해 효율적으로 소스 코드를 디버깅할 수 있다.
&lt;img alt="Debugger" src="./images/2018-12/chrome-dev-tool-101-source-debugger.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;값 추적&lt;/strong&gt; (Watch)&lt;ul&gt;
&lt;li&gt;중단점에서 지정된 변수의 값을 출력한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;호출 스택&lt;/strong&gt; (Call Stack)&lt;ul&gt;
&lt;li&gt;현재 중단된 지점이 어떤 함수 호출을 통해 온 것인지 확인할 수 있다. 이전 스택을 선택하여 해당 호출 상황으로 돌아가 디버깅이 가능하다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;범위&lt;/strong&gt; (Scope)&lt;ul&gt;
&lt;li&gt;지정된 범위에 포함된 변수를 확인할 수 있다. 지역 변수와 전역 변수 외에도 현재 중단점의 클로저 변수도 확인할 수 있어 유용하다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;중단점&lt;/strong&gt; (Breakpoint)&lt;ul&gt;
&lt;li&gt;설정된 중단점의 목록을 표시한다. 체크 박스를 해제하면 일시적으로 해당 중단점을 사용하지 않게 할 수 있다. 우클릭을 통해 컨텍스트 메뉴를 호출하여 모든 중단점을 지우거나 비활성화 시키는 등의 작업을 수행할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;네트워크 (Network)&lt;/h4&gt;
&lt;p&gt;&lt;img alt="Network" src="./images/2018-12/chrome-dev-tool-101-network.png"&gt;
페이지를 표시하는데 필요한 네트워크 작업에 대한 결과를 시간순으로 표시한다. 페이지 로드가 느리다면 이 탭을 통해 그 원인을 파악할 수 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;캐시 사용안함&lt;/strong&gt; (Disable cache)&lt;ul&gt;
&lt;li&gt;캐시를 사용하지 않을 경우 어떻게 네트워크 요청이 이뤄지는지 확인해볼 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;오프라인&lt;/strong&gt; (Offline)&lt;ul&gt;
&lt;li&gt;네트워크가 연결되지 않은 상태를 가정하여 페이지를 표시한다. 오프라인 웹 앱을 구성할 때 사용한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;트래픽 조절&lt;/strong&gt; (Throttling)
    &lt;img alt="Preset" src="./images/2018-12/chrome-dev-tool-101-network-preset.png"&gt;&lt;ul&gt;
&lt;li&gt;느린 네트워크 상황을 가정하여 페이지를 표시한다. &lt;code&gt;Fast 3G&lt;/code&gt; / &lt;code&gt;Slow 3G&lt;/code&gt; 등의 프리셋이 있으며, 원하는 속도와 지연 시간을 지정하여 사용할 수도 있다. 개발할 때 자주 이 기능을 활성화 하여 테스트 해보는 것을 추천한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;특정 항목을 선택하여 해당 항목이 어떻게 요청되었는지, 어떤 응답을 받았는지를 상세히 확인할 수 있다. 서버에 어떤 헤더를 지정하여 요청했는지, 응답으로는 어떤 헤더를 받았는지 확인하며 네트워크 최적화를 진행하는데 유용하다.
&lt;img alt="Request and response header" src="./images/2018-12/chrome-dev-tool-101-network-header.png"&gt;&lt;/p&gt;
&lt;h4&gt;성능 (Performance)&lt;/h4&gt;
&lt;p&gt;&lt;img alt="Performance" src="./images/2018-12/chrome-dev-tool-101-performance.png"&gt;
네트워크 탭을 통해 원격지와 어떻게 데이터를 요청하고 받았는지 확인하며 최적화를 했다면, 성능 탭에서는 자바스크립트 실행과 화면 그리기를 추적하여 어떤 부분이 웹 애플리케이션을 지연시키고 있는지 확인할 수 있다. 녹화(Record) 버튼을 누른 뒤 페이지를 로드하거나 자바스크립트 작업을 수행한 후, 정지하면 그 사이에 발생한 자바스크립트의 함수별 호출수와 사용된 시간 등을 확인할 수 있다.&lt;/p&gt;
&lt;p&gt;타임 라인에서 구간을 선택하고 어떤 함수 호출이 가장 많은 시간을 사용했는지, 또 어떤 흐름으로 작업을 수행했는지 등을 파악할 수 있다.
&lt;img alt="Heavist job" src="./images/2018-12/chrome-dev-tool-101-performance-heavist.png"&gt;&lt;/p&gt;
&lt;h4&gt;애플리케이션 (Application)&lt;/h4&gt;
&lt;p&gt;&lt;img alt="Application" src="./images/2018-12/chrome-dev-tool-101-application.png"&gt;
애플리케이션 탭에서는 웹 페이지가 웹 애플리케이션으로 기능하기 위해 필요한 내용들을 보여준다. 예전 웹 페이지에서는 오직 쿠키로만 정보를 저장하던 것과 달리, &lt;a href="https://developers.google.com/web/fundamentals/instant-and-offline/web-storage/"&gt;다양한 웹 저장소&lt;/a&gt;가 추가되어 더 안전하고 빠른 형태로 정보를 읽고 쓸 수 있게 되었다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;선언&lt;/strong&gt; (Manifest)&lt;ul&gt;
&lt;li&gt;일반적으로 &lt;code&gt;&amp;lt;link rel="manifest" href="/manifest.json"&amp;gt;&lt;/code&gt;로 선언된 &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Manifest"&gt;웹 애플리케이션과 관련된 선언&lt;/a&gt;을 표시한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;서비스 워커&lt;/strong&gt; (Service Workers)&lt;ul&gt;
&lt;li&gt;현재 페이지에서 사용중인 &lt;a href="https://developers.google.com/web/fundamentals/primers/service-workers/"&gt;서비스 워커&lt;/a&gt; 정보를 표시한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;로컬 저장소&lt;/strong&gt; (Local Storage)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;키/값 쌍으로 손쉽게 데이터를 읽고 쓸 수 있다. 웹 브라우저마다 도메인별로 할당된 저장 공간의 크기가 다르지만 일반적으로 &lt;code&gt;10 MiB&lt;/code&gt;까지 허용된다.&lt;/li&gt;
&lt;li&gt;데이터는 도메인 단위로 공유되어, 같은 브라우저 내의 서로 다른 창/탭에서도 같은 데이터를 공유할 수 있다.&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;key&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;value&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;key&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;removeItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;key&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;세션 저장소&lt;/strong&gt; (Session Storage)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;로컬 저장소와 기능적으로는 같지만, 사용자가 명시적으로 삭제하지 않으면 지워지지 않는 로컬 저장소와는 달리, 세션 저장소는 브라우저가 닫힐 때 같이 제워진다. &lt;/li&gt;
&lt;li&gt;로컬 저장소와 달리, 같은 도메인일 경우에도 창/탭 단위로 서로 다른 데이터를 사용하게 된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;인덱스DB&lt;/strong&gt; (IndexedDB)&lt;ul&gt;
&lt;li&gt;많이 사용되는 관계형 데이터베이스를 브라우저에서도 사용할 수 있다. 일반적으로 &lt;code&gt;50 MiB&lt;/code&gt;이상 사용할 경우에는 사용자 동의를 필요로 한다. 이전에는 이를 위해 &lt;code&gt;WebSQL&lt;/code&gt;이 있었지만 &lt;a href="https://softwareengineering.stackexchange.com/questions/220254/why-is-web-sql-database-deprecated"&gt;이제는 사용되지 않는다&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;쿠키&lt;/strong&gt; (Cookies)&lt;ul&gt;
&lt;li&gt;현재 페이지에서 사용 중인 쿠키 정보를 보여준다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;보안 (Security)&lt;/h4&gt;
&lt;p&gt;&lt;img alt="Security" src="./images/2018-12/chrome-dev-tool-101-security.png"&gt;
페이지의 인증서와 페이지에서 참조하는 도메인의 인증서 등을 검사하고 그 결과를 보여준다. 모든 사이트에 HTTPS 연결이 강조되므로 이 탭을 통해 페이지에서 참조하는 리소스에 대해서도 확인하는 것이 필요하다.&lt;/p&gt;
&lt;h4&gt;감사 (Audits)&lt;/h4&gt;
&lt;p&gt;&lt;img alt="Audits" src="./images/2018-12/chrome-dev-tool-101-audits.png"&gt;
&lt;a href="https://developers.google.com/web/tools/lighthouse/"&gt;Lighthouse&lt;/a&gt;를 통한 페이지 검사 결과를 표시하고 저장할 수 있다. 기본적인 페이지의 성능과 &lt;a href="https://developers.google.com/web/progressive-web-apps/"&gt;PWA&lt;/a&gt;, &lt;a href="https://en.wikipedia.org/wiki/Search_engine_optimization"&gt;SEO&lt;/a&gt;, &lt;a href="https://www.w3.org/standards/webdesign/accessibility"&gt;접근성&lt;/a&gt;과 관련된 점수를 제공하므로, &lt;a href="https://developers.google.com/speed/"&gt;Page speed&lt;/a&gt;와 함께 사용하여 품질 높은 페이지를 만드는데 참조하면 좋다. &lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;추가 기능 (More tools)&lt;/h3&gt;
&lt;p&gt;&lt;img alt="More tools" src="./images/2018-12/chrome-dev-tool-101-moretools.png"&gt;
개발자 도구의 기본 탭의 오른쪽 끝 메뉴(&lt;code&gt;⋮&lt;/code&gt;)를 클릭하면 추가 개발자 도구를 확인할 수 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;도구 위치&lt;/strong&gt; (Dock side)&lt;ul&gt;
&lt;li&gt;개발자 도구를 별도의 창으로 분리하거나, 같은 창의 특정 위치로 보낼 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;콘솔 창 보이기/숨기기&lt;/strong&gt; (Show/Hide console drawer)&lt;ul&gt;
&lt;li&gt;콘솔과 추가 기능을 별도로 표시하는 창을 보이거나 숨길 수 있다. &lt;/li&gt;
&lt;li&gt;단축키: &lt;code&gt;Esc&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;검색&lt;/strong&gt; (Search)&lt;ul&gt;
&lt;li&gt;페이지를 표시하는데 쓰인 파일과 개발자 도구에 등록된 파일 시스템, 코드 조각 등의 모든 파일을 대상으로 검색을 수행한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;명령 실행&lt;/strong&gt; (Run command)
    &lt;img alt="Run command" src="./images/2018-12/chrome-dev-tool-101-moretools-runcommand.png"&gt;&lt;ul&gt;
&lt;li&gt;개발자 도구의 기능 목록을 보고 검색하여 실행할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;파일 열기&lt;/strong&gt; (Open file)
    &lt;img alt="Run command" src="./images/2018-12/chrome-dev-tool-101-moretools-openfile.png"&gt;&lt;ul&gt;
&lt;li&gt;페이지를 표시하는데 쓰인 파일과 개발자 도구에 등록된 파일 시스템, 코드 조각 등의 모든 파일을 표시하고 검색하여 파일을 열 수 있도록 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;추가 기능&lt;/strong&gt; (More tools)&lt;ul&gt;
&lt;li&gt;개발자 도구의 기본 탭에 표시된 기능 외에 다른 기능들을 추가로 사용할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;추가 기능에는 다음 항목이 있으며 각 항목에 대한 자세한 설명은 아래 목록의 링크와 &lt;a href="https://developers.google.com/web/tools/chrome-devtools/"&gt;구글 크롬 개발자 도구 도움말&lt;/a&gt;을 참조한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developers.google.com/web/tools/chrome-devtools/inspect-styles/animations"&gt;Animations&lt;/a&gt;: CSS 애니메이션을 타임라인을 따라 추적하고 캡춰할 수 있다.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.google.com/web/updates/2018/01/devtools#changes"&gt;Changes&lt;/a&gt;: 소스 코드 변경 사항을 추적한다.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.google.com/web/updates/2017/04/devtools-release-notes#coverage"&gt;Coverage&lt;/a&gt;: 해당 페이지에서 파일별로 얼마나 많은 부분을 실제로 사용했는지 표시.&lt;/li&gt;
&lt;li&gt;JavaScript Profiler: 성능(Performance)와 유사한 기능을 제공한다.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.google.com/web/tools/chrome-devtools/network-performance/network-conditions"&gt;Network conditions&lt;/a&gt;: 네트워크(Network)의 트래픽 조절(Throttling)과 같은 기능.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.google.com/web/updates/2017/04/devtools-release-notes#block-requests"&gt;Request blocking&lt;/a&gt;: 패턴 매칭을 통해 특정 요청만 제한하는 테스트가 가능하다.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.google.com/web/tools/chrome-devtools/device-mode/device-input-and-sensors"&gt;Sensors&lt;/a&gt;: 모바일 장치의 위치 정보와 가속도 센서를 에뮬레이션.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3&gt;설정 (Settings)&lt;/h3&gt;
&lt;p&gt;&lt;img alt="Settings" src="./images/2018-12/chrome-dev-tool-101-settings.png"&gt;
개발자 도구 자체에 대한 다양한 설정이 제공되며, 주요 기능은 다음과 같다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Appearance&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;Theme: Light/Dark 테마를 변경할 수 있다.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.google.com/web/updates/2017/05/devtools-release-notes#badges"&gt;Show third party URL badges&lt;/a&gt;: 네트워크 탭에서 잘 알려진 제 3자 도메인의 아이콘을 같이 표시한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sources&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;Enable JavaScript source maps: 자바스크립트 소스 맵을 활성화 한다.&lt;/li&gt;
&lt;li&gt;Autocompletion: 자동 완성 기능을 사용한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Elements&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;Show rulers: 눈금자를 표시한다.&lt;/li&gt;
&lt;li&gt;Color format: 색상값을 어떻게 표시할 지 지정한다. 기본값은 &lt;code&gt;작성된 대로(As authored)&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Network&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;Enable request blocking: 특정 요청을 제한하는 기능을 활성화 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Console&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;Show timestamps: 콘솔 로그 왼쪽에 해당 출력이 일어난 시간을 표시한다.&lt;/li&gt;
&lt;li&gt;Group similar: 같은 출력이 반복되는 경우, 왼쪽에 반복된 출력 회수를 표시하고 중복하여 출력하지 않는다.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.google.com/web/updates/2018/05/devtools#eagerevaluation"&gt;Eager evaluation&lt;/a&gt;: 콘솔 명령어 입력 후, 엔터를 치기 전에 이제까지 입력된 내용을 바탕으로 미리 수행한 결과를 보여준다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Debugger&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;Disable JavaScript: 자바스크립트를 실행하지 않는다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;이 글에서 언급된 내용은 크롬 개발자 도구의 극히 일부에 불과하므로 궁금한 내용은 항상 &lt;a href="https://developers.google.com/web/tools/chrome-devtools/"&gt;구글 크롬 개발자 도구 도움말&lt;/a&gt;을 참조하는 것이 좋다.&lt;/p&gt;
&lt;p&gt;마지막 팁: 개발자 도구 내에서도 &lt;code&gt;⌘ + +/-&lt;/code&gt; 또는 &lt;code&gt;Ctrl + +/-&lt;/code&gt;를 통해 일반 페이지와 마찬가지로 확대/축소가 가능하다.
&lt;img alt="Zoom in Devtool" src="./images/2018-12/chrome-dev-tool-101-zoom.png"&gt;&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</content></entry></feed>