<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Feature creep designer</title><link href="http://lqez.github.io/blog/" rel="alternate"></link><link href="http://lqez.github.io/blog/feeds/2014-07.atom.xml" rel="self"></link><id>http://lqez.github.io/blog/</id><updated>2014-07-17T00:00:00+09:00</updated><entry><title>Fool Upstart</title><link href="http://lqez.github.io/blog/fool-upstart.html" rel="alternate"></link><updated>2014-07-17T00:00:00+09:00</updated><author><name></name></author><id>tag:lqez.github.io/blog,2014-07-17:fool-upstart.html</id><summary type="html">&lt;h1&gt;Upstart&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://upstart.ubuntu.com/"&gt;Upstart&lt;/a&gt;는 /sbin/init 를 대체하기 위한 우분투의 기본 서비스 관리자다.
다양한 서비스를 daemon 형태로 관리하고, 죽은 경우에 자동으로 다시 실행할 수 있는 등 편리한 기능을 갖추고 있다.&lt;/p&gt;
&lt;p&gt;프로세스 ID를 받아 해당 프로세스가 잘 동작하는지 감시해야 하므로,
해당 서비스가 어떤 형태로 시작되는지 알고 있어야 정확한 프로세스 ID를 얻을 수 있다.
Upstart 설정 중, &lt;a href="http://upstart.ubuntu.com/cookbook/#expect"&gt;expect stanza&lt;/a&gt;가 이를 결정하며 일반적인 프로세스는 설정하지 않아도 동작하지만,
해당 프로세스가 fork 되어 동작하거나 daemonize 되는 경우, 별도의 값을 지정해야 정확한 ID 확인이 가능하다.
이 부분에 혼란을 겪은 사람이 꽤 많아, 홈페이지 에서 별도로 안내하고 있을 정도다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://upstart.ubuntu.com/cookbook/#implications-of-misspecifying-expect"&gt;6.13.5 Implications of Misspecifying expect&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Symptom&lt;/h2&gt;
&lt;p&gt;보통은 이 값을 잘못 설정한 경우에 서비스가 제대로 감시되지 않거나, 종료되지 않는 등의 문제가 생기는데
오늘은 해당 서비스를 재시작하면서 별다른 설정의 변경이 없었음에도 불구하고, 이상한 상태에 빠지고 말았다.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;initctl&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;flower&lt;/span&gt;
&lt;span class="n"&gt;one&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;flower&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;killed&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;process&lt;/span&gt; &lt;span class="mi"&gt;14645&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;이 상황에서는 &lt;code&gt;start&lt;/code&gt; / &lt;code&gt;stop&lt;/code&gt; 명령어가 전부 hang이 되어 서비스 재시작이나 종료가 불가능하다.
&lt;code&gt;start/killed&lt;/code&gt; 로 표시되는 프로세스 ID를 &lt;code&gt;ps&lt;/code&gt;로 찾아보면 당연히 없는 프로세스 ID다.
한참을 헤매다 혹시나 싶어 upstart configuration 파일을 복제하여 다른 이름으로 바꿨더니, 제대로 동작한다!&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;initctl&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;flower&lt;/span&gt;
&lt;span class="n"&gt;one&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;flower&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;killed&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;process&lt;/span&gt; &lt;span class="mi"&gt;14645&lt;/span&gt;
&lt;span class="n"&gt;one&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;flower_dup&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;running&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;process&lt;/span&gt; &lt;span class="mi"&gt;17171&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Solution&lt;/h2&gt;
&lt;p&gt;시스템을 재시작하면 복구될 것 같았지만, 당장 재시작할 수 없는 프로덕션 시스템이라
혹시나 하여 구글링을 계속하다보니 누군가 만들어둔 루비 스크립트를 찾게 되었다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ion1/workaround-upstart-snafu"&gt;https://github.com/ion1/workaround-upstart-snafu&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;프로세스가 &lt;code&gt;start/killed&lt;/code&gt; 또는 &lt;code&gt;stop/killed&lt;/code&gt; 상태일 때 사용할 수 있는 이 스크립트는,&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;포크하여 프로세스 A를 하나 생성한다.&lt;/li&gt;
&lt;li&gt;프로세스 A에서 문제의 프로세스 ID를 받을 때까지 계속해서 자식 프로세스 B를 포크한다.&lt;/li&gt;
&lt;li&gt;지정된 ID를 얻으면 프로세스 A, B를 모두 종료한다.&lt;/li&gt;
&lt;li&gt;Upstart는 이것이 정상적인 프로세스 종료로 판단하고 혼란 상황에서 빠져나온다.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;우여곡절 끝에 문제 해결.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;initctl&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;one&lt;/span&gt;
&lt;span class="n"&gt;one&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;flower&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;running&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;process&lt;/span&gt; &lt;span class="mi"&gt;14810&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</summary><category term="diary"></category><category term="ubuntu"></category></entry><entry><title>Lie makes worse career</title><link href="http://lqez.github.io/blog/lie-makes-worse-career.html" rel="alternate"></link><updated>2014-07-16T00:00:00+09:00</updated><author><name></name></author><id>tag:lqez.github.io/blog,2014-07-16:lie-makes-worse-career.html</id><summary type="html">&lt;p&gt;구인 과정에서 있었던 불미스러운 일을 포스팅 하였으나,
이하와 같은 의견이 있어 당사자와 대화하고 내용을 수정하였습니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/returned_momoko/status/489567277793017856"&gt;https://twitter.com/returned_momoko/status/489567277793017856&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/RealKaracha/status/489576613537800192"&gt;https://twitter.com/RealKaracha/status/489576613537800192&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;당사자와의 문제를 끌어내 확대 해석 가능하도록 만든 점에 대해 사과드립니다.
아래는 당사자와 대화한 내용을 동의하에 기록한 것입니다.&lt;/p&gt;
&lt;p&gt;&lt;img alt="conv.png" src="./static/images/2014-07/conv.png" /&gt;&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</summary><category term="diary"></category></entry></feed>