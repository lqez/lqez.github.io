<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Feature creep designer - 2014-07</title><link href="//lqez.github.io/blog/" rel="alternate"></link><link href="//lqez.github.io/blog/feeds/2014-07.atom.xml" rel="self"></link><id>//lqez.github.io/blog/</id><updated>2014-07-22T00:00:00+09:00</updated><entry><title>segfault by ssl_session_cache in Nginx</title><link href="//lqez.github.io/blog/segfault-by-ssl_session_cache-in-nginx.html" rel="alternate"></link><published>2014-07-22T00:00:00+09:00</published><updated>2014-07-22T00:00:00+09:00</updated><author><name></name></author><id>tag:lqez.github.io,2014-07-22:/blog/segfault-by-ssl_session_cache-in-nginx.html</id><summary type="html">&lt;p&gt;과거에는 SSL 웹서비스를 위해서 도메인 별로 다른 IP를 써야만 했었다.
하지만 &lt;a href="http://en.wikipedia.org/wiki/Server_Name_Indication"&gt;Server Name Indication&lt;/a&gt;이 등장한 이후로,
하나의 물리 IP에 여러 도메인의 SSL 웹 서비스가 가능해졌는데, 이를 위해 웹 서버 뿐 아니라 클라이언트에서의 지원도 필요하다.
대표적으로 Internet Explorer 6 등은 SNI를 지원하지 않는다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Server_Name_Indication#Client_side"&gt;SNI를 지원하지 않는 클라이언트 목록&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;회사에서도 SNI를 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;과거에는 SSL 웹서비스를 위해서 도메인 별로 다른 IP를 써야만 했었다.
하지만 &lt;a href="http://en.wikipedia.org/wiki/Server_Name_Indication"&gt;Server Name Indication&lt;/a&gt;이 등장한 이후로,
하나의 물리 IP에 여러 도메인의 SSL 웹 서비스가 가능해졌는데, 이를 위해 웹 서버 뿐 아니라 클라이언트에서의 지원도 필요하다.
대표적으로 Internet Explorer 6 등은 SNI를 지원하지 않는다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Server_Name_Indication#Client_side"&gt;SNI를 지원하지 않는 클라이언트 목록&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;회사에서도 SNI를 지원하는 Nginx를 통해 여러 SSL 웹서비스를 운영하고 있는데,
특정 클라이언트로 접속한 경우에 Nginx 가 종료되는 문제가 발생하였다.
최적화를 위해 도입한 &lt;code&gt;ssl_session_cache&lt;/code&gt; directive를 추가한 이후에 발생한 문제였는데,
검색해보니 동일한 증상이 Nginx Trac에 보고되어 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://trac.nginx.org/nginx/ticket/235"&gt;http://trac.nginx.org/nginx/ticket/235&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;덧) 이 글을 처음 썼던 시점으로부터 1년이 지나 2015년 10월에서야 수정되어 Nginx 1.9.6에 반영되었다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://trac.nginx.org/nginx/timeline?from=2015-10-20T16%3A38%3A08Z&amp;amp;precision=second"&gt;https://trac.nginx.org/nginx/timeline?from=2015-10-20T16%3A38%3A08Z&amp;amp;precision=second&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</content><category term="nginx"></category><category term="openssl"></category></entry><entry><title>Fool Upstart</title><link href="//lqez.github.io/blog/fool-upstart.html" rel="alternate"></link><published>2014-07-17T00:00:00+09:00</published><updated>2014-07-17T00:00:00+09:00</updated><author><name></name></author><id>tag:lqez.github.io,2014-07-17:/blog/fool-upstart.html</id><summary type="html">&lt;h1&gt;Upstart&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://upstart.ubuntu.com/"&gt;Upstart&lt;/a&gt;는 /sbin/init 를 대체하기 위한 우분투의 기본 서비스 관리자다.
다양한 서비스를 daemon 형태로 관리하고, 죽은 경우에 자동으로 다시 실행할 수 있는 등 편리한 기능을 갖추고 있다.&lt;/p&gt;
&lt;p&gt;프로세스 ID를 받아 해당 프로세스가 잘 동작하는지 감시해야 하므로,
해당 서비스가 어떤 형태로 시작되는지 알고 있어야 정확한 프로세스 ID를 얻을 수 …&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Upstart&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://upstart.ubuntu.com/"&gt;Upstart&lt;/a&gt;는 /sbin/init 를 대체하기 위한 우분투의 기본 서비스 관리자다.
다양한 서비스를 daemon 형태로 관리하고, 죽은 경우에 자동으로 다시 실행할 수 있는 등 편리한 기능을 갖추고 있다.&lt;/p&gt;
&lt;p&gt;프로세스 ID를 받아 해당 프로세스가 잘 동작하는지 감시해야 하므로,
해당 서비스가 어떤 형태로 시작되는지 알고 있어야 정확한 프로세스 ID를 얻을 수 있다.
Upstart 설정 중, &lt;a href="http://upstart.ubuntu.com/cookbook/#expect"&gt;expect stanza&lt;/a&gt;가 이를 결정하며 일반적인 프로세스는 설정하지 않아도 동작하지만,
해당 프로세스가 fork 되어 동작하거나 daemonize 되는 경우, 별도의 값을 지정해야 정확한 ID 확인이 가능하다.
이 부분에 혼란을 겪은 사람이 꽤 많아, 홈페이지 에서 별도로 안내하고 있을 정도다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://upstart.ubuntu.com/cookbook/#implications-of-misspecifying-expect"&gt;6.13.5 Implications of Misspecifying expect&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Symptom&lt;/h2&gt;
&lt;p&gt;보통은 이 값을 잘못 설정한 경우에 서비스가 제대로 감시되지 않거나, 종료되지 않는 등의 문제가 생기는데
오늘은 해당 서비스를 재시작하면서 별다른 설정의 변경이 없었음에도 불구하고, 이상한 상태에 빠지고 말았다.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ initctl list &lt;span class="p"&gt;|&lt;/span&gt; grep flower
one/flower start/killed, process &lt;span class="m"&gt;14645&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;이 상황에서는 &lt;code&gt;start&lt;/code&gt; / &lt;code&gt;stop&lt;/code&gt; 명령어가 전부 hang이 되어 서비스 재시작이나 종료가 불가능하다.
&lt;code&gt;start/killed&lt;/code&gt; 로 표시되는 프로세스 ID를 &lt;code&gt;ps&lt;/code&gt;로 찾아보면 당연히 없는 프로세스 ID다.
한참을 헤매다 혹시나 싶어 upstart configuration 파일을 복제하여 다른 이름으로 바꿨더니, 제대로 동작한다!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ initctl list &lt;span class="p"&gt;|&lt;/span&gt; grep flower
one/flower start/killed, process &lt;span class="m"&gt;14645&lt;/span&gt;
one/flower_dup start/running, process &lt;span class="m"&gt;17171&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Solution&lt;/h2&gt;
&lt;p&gt;시스템을 재시작하면 복구될 것 같았지만, 당장 재시작할 수 없는 프로덕션 시스템이라
혹시나 하여 구글링을 계속하다보니 누군가 만들어둔 루비 스크립트를 찾게 되었다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ion1/workaround-upstart-snafu"&gt;https://github.com/ion1/workaround-upstart-snafu&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;프로세스가 &lt;code&gt;start/killed&lt;/code&gt; 또는 &lt;code&gt;stop/killed&lt;/code&gt; 상태일 때 사용할 수 있는 이 스크립트는,&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;포크하여 프로세스 A를 하나 생성한다.&lt;/li&gt;
&lt;li&gt;프로세스 A에서 문제의 프로세스 ID를 받을 때까지 계속해서 자식 프로세스 B를 포크한다.&lt;/li&gt;
&lt;li&gt;지정된 ID를 얻으면 프로세스 A, B를 모두 종료한다.&lt;/li&gt;
&lt;li&gt;Upstart는 이것이 정상적인 프로세스 종료로 판단하고 혼란 상황에서 빠져나온다.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;우여곡절 끝에 문제 해결.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ initctl list &lt;span class="p"&gt;|&lt;/span&gt; grep one
one/flower start/running, process &lt;span class="m"&gt;14810&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</content><category term="diary"></category><category term="ubuntu"></category></entry></feed>