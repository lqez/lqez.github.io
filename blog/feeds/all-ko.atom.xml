<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Feature creep designer</title><link href="http://lqez.github.io/blog/" rel="alternate"></link><link href="http://lqez.github.io/blog/feeds/all-ko.atom.xml" rel="self"></link><id>http://lqez.github.io/blog/</id><updated>2013-05-14T00:00:00+09:00</updated><entry><title>gittip.com and /for/korea</title><link href="http://lqez.github.io/blog/gittipcom-and-forkorea.html" rel="alternate"></link><updated>2013-05-14T00:00:00+09:00</updated><author><name></name></author><id>tag:lqez.github.io/blog,2013-05-14:gittipcom-and-forkorea.html</id><summary type="html">&lt;p&gt;얼마 전, &lt;a href="http://www.kickstarter.com/projects/andrewgodwin/schema-migrations-for-django"&gt;Schema Migrations for Django&lt;/a&gt; 라는 오픈소스 프로젝트 계획에 대한 모금 활동이 킥스타터에서 큰 성공을 거뒀다. 이제까지 오픈소스를 사용하면서 개발한 이들에게 고마움을 표시하는 방법은 해당 프로젝트를 열심히 사용하며, 버그 제보, 번역, 기능 추가 또는 사용기 발표 정도 밖에 없다고 생각했는데, '금전적인' 후원도 가능하다는 것을 알게 되었다.&lt;/p&gt;
&lt;h2&gt;Gittip&lt;/h2&gt;
&lt;p&gt;&lt;img alt="gittip.png" src="./static/images/2013-05/gittip.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.gittip.com"&gt;https://www.gittip.com&lt;/a&gt; 은 오픈소스 개발자나 오픈소스 그룹에게 정기적으로 후원을 할 수 있는 웹서비스이다. 앞서 언급한 킥스타터와는 달리, 한 번 기부하고 마는 것이 아니라 지정한 금액을 매주 목요일 기부하게 된다.
궁극적으로 이 사이트를 통해 의미있는 오픈소스 개발을 하는 사람이나 단체가 전업으로 오픈소스를 진행할 수 있는 기반을 갖게된다면 좋겠지만, 아직까지 그 정도로 많은 금액이 오고가는 것으로 보이진 않는다. 하지만, 주기적인 기부는 위와 같은 단기적인 프로젝트 기금 마련과는 다른 방향을 가지고 있고, 이는 오픈소스에 보다 긍정적인 문화를 가져올 것 같다.&lt;/p&gt;
&lt;h2&gt;/for/korea&lt;/h2&gt;
&lt;p&gt;Gittip 의 커뮤니티 기능이 약 &lt;a href="https://github.com/gittip/www.gittip.com/commit/f2ca1fa1f3eb1c8cabe9b98bebc1e180dd669e61"&gt;2주 전에 추가&lt;/a&gt;되었는데, 이에 한국 파이썬 커뮤니티계의 아이돌(...) &lt;a href="https://twitter.com/hongminhee"&gt;@hongminhee&lt;/a&gt; 님이 한국 개발자 커뮤니티(&lt;a href="https://www.gittip.com/for/korea/"&gt;/for/korea&lt;/a&gt;)를 만들고, 가입을 요청하는 트윗을 올렸다.&lt;/p&gt;
&lt;p&gt;&lt;blockquote class="twitter-tweet" align="center"&gt;&lt;a href="https://twitter.com/hongminhee/status/333868284195770368"&gt;Tweet of hongminhee/333868284195770368&lt;/a&gt;&lt;/blockquote&gt;&lt;/p&gt;
&lt;p&gt;해당 요청은 트위터나 페이스북을 통해 오픈소스에 관심이 있는 한국 개발자들에게 빠르게 전파되었고, 덕분에 몇 시간 지나지 않아 커뮤니티 구성 요건의 최소 인원인 150명에 가장 빠르게 도달하였다. 하지만 개발자 &lt;a href="https://twitter.com/whit537"&gt;@whit537&lt;/a&gt; 도 이처럼 빨리 150명에 도달할 것이라 생각하지 못한 모양이다.&lt;/p&gt;
&lt;p&gt;&lt;blockquote class="twitter-tweet" align="center"&gt;&lt;a href="https://twitter.com/whit537/status/333945787216175104"&gt;Tweet of whit537/333945787216175104&lt;/a&gt;&lt;/blockquote&gt;
&lt;blockquote class="twitter-tweet" align="center"&gt;&lt;a href="https://twitter.com/whit537/status/333948844951891969"&gt;Tweet of whit537/333948844951891969&lt;/a&gt;&lt;/blockquote&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://twitter.com/whit537"&gt;@whit537&lt;/a&gt; 은 다음과 같은 커밋을 통해, 'korea' 커뮤니티의 150명 도달에 긴급히 대비하였다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/gittip/www.gittip.com/commit/03429b36850b163879afc64b35d160f8f3c13146"&gt;#03429b3 Get barely ahead of Korea maybe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gittip/www.gittip.com/commit/c52b4c8d817e9c86453f118bbae72d355dedb0b3"&gt;#c52b4c8 Korea beat us to this!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Small step for us&lt;/h2&gt;
&lt;p&gt;&lt;img alt="gittip-korea.png" src="./static/images/2013-05/gittip-korea.png" /&gt;&lt;/p&gt;
&lt;p&gt;Gittip의 커뮤니티 중, &lt;a href="https://www.gittip.com/for/korea/"&gt;/for/korea&lt;/a&gt;가 가장 먼저 최소 요건인 150명을 돌파하였다. 특정 국가 커뮤니티로써 가장 큰 것일 뿐 아니라, 다른 모든 커뮤니티(예:&lt;a href="https://www.gittip.com/for/python/"&gt;/for/python&lt;/a&gt;) 중에서도 가장 인원이 많다. 이렇게 많은 개발자가 이런 사이트에 관심을 가지고 있는 줄 몰랐고, 이렇게 빨리 가입한 것은 더욱 놀랍다. 그럼에도 불구하고 부끄러운 것은, 한국인 커뮤니티에 가입한 사람들이 기부하고 있는 금액이 너무 적다는 점이다. 물론 한국 개발자들 중에서 아직 이 커뮤니티의 존재를 몰라, 가입하지 않은 상태로 기부하고 있을 수도 있겠다. 또는, 페이팔 계정이나 해외에서 자유롭게 결제 가능한 카드를 우리나라에서 만들기가 어려웠던 부분도 있을 것이다. 하지만 이 글을 쓰고 있는 현재, 도합 몇 달러가 채 안되는 금액이라는 것은 조금 아쉽다.&lt;/p&gt;
&lt;p&gt;나는 예전에 &lt;a href="https://twitter.com/hongminhee"&gt;@hongminhee&lt;/a&gt; 님에게 &lt;a href="http://pytest.org/latest/"&gt;py.test&lt;/a&gt; 의 디버깅 도움을 받아, 이 사이트에서 후원하려다가 아직 계좌 연결을 시켜두시지 않은 관계로, 대신 독콜라(...) 한 박스를 보낸적이 있다. 아무튼 오늘 다시 한 번 사이트에 들어간 차에 적은 금액이지만 주당 $1.50 을 후원하도록 설정하였다.&lt;/p&gt;
&lt;p&gt;오픈소스를 만들고 기꺼이 공개한 이들에게 감사를 표시하는 차원에서, 이 글을 읽는 분들도 자기가 쓰고 있는 프로젝트의 개발자나 그룹에 후원해보는 것은 어떨까?&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</summary><category term="gittip"></category><category term="donate"></category><category term="contribute"></category></entry><entry><title>499px</title><link href="http://lqez.github.io/blog/499px.html" rel="alternate"></link><updated>2013-05-08T00:00:00+09:00</updated><author><name></name></author><id>tag:lqez.github.io/blog,2013-05-08:499px.html</id><summary type="html">&lt;p&gt;&lt;a href="https://twitter.com/drypot"&gt;&lt;a href="https://twitter.com/drypot"&gt;@drypot&lt;/a&gt;&lt;/a&gt; 님이 의지를 불태워 &lt;a href="http://rapixel.com"&gt;http://rapixel.com&lt;/a&gt; 을 만들고 있는 것에 감명받아,
예전부터 만들고 싶었던 사진 저장/공유 사이트 아이디어를 구체화 해보았다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;원본 사진을 보관한다.&lt;/li&gt;
&lt;li&gt;모바일 앱에서 바로 사진을 올릴 수 있다.&lt;/li&gt;
&lt;li&gt;모두에게 공유할 수도 있지만, 기본적으로는 나만 본다.&lt;/li&gt;
&lt;li&gt;이러한 공유 설정은 폴더 단위로 작동한다.&lt;/li&gt;
&lt;li&gt;폴더에 하위 폴더는 없다.&lt;/li&gt;
&lt;li&gt;특정 사용자와 폴더를 공유한다.&lt;/li&gt;
&lt;li&gt;공유된 폴더는 다른 사용자도 사진을 올릴 수 있다.&lt;/li&gt;
&lt;li&gt;노출되는 기기의 종류나 해상도에 따라, 적합한 화면을 제공한다.&lt;ul&gt;
&lt;li&gt;폰에서는 한 장씩 넘기면서 편하게 보고,&lt;/li&gt;
&lt;li&gt;PC나 태블릿에서는 목록과 함께 보기,&lt;/li&gt;
&lt;li&gt;TV에서는 켄-번 효과가 적용된 슬라이드 또는 오리가미 등.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;여기까지는 플리커나 밴드, 뭐 기타 여러 사진 웹/앱 서비스와 다를 바가 없다.
아래는 추가할 기능.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;특정 위치에 클릭/터치를 하고 있으면 &lt;a href="http://en.wikipedia.org/wiki/Loupe"&gt;루페&lt;/a&gt;가 나와 확대해서 볼 수 있다.&lt;/li&gt;
&lt;li&gt;해당 폴더에 D-day를 지정해, 기념일로부터 며칠이 지났는지 또는 며칠이 남았는지 확인할 수 있다.&lt;/li&gt;
&lt;li&gt;폴더는 기본적으로 n일 후에 자동 폭파된다.&lt;/li&gt;
&lt;li&gt;영구히 보관하는 기능은 유료로 제공.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;너무 길다. 하고 싶었던건 그저, &lt;strong&gt;"사진을 지인들과 편리하게 같이 보고 싶다."&lt;/strong&gt; 였는데.&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</summary><category term="idea"></category><category term="photo"></category><category term="web"></category></entry><entry><title>Making a fan page for a 'Developer conference'</title><link href="http://lqez.github.io/blog/making-a-fan-page-for-a-developer-conference.html" rel="alternate"></link><updated>2013-04-20T00:00:00+09:00</updated><author><name></name></author><id>tag:lqez.github.io/blog,2013-04-20:making-a-fan-page-for-a-developer-conference.html</id><summary type="html">&lt;h1&gt;Preface&lt;/h1&gt;
&lt;p&gt;2012년 4월, 모 게임회사의 개발자 컨퍼런스가 열린다는 소식을 듣고, 기쁜 마음에 해당 컨퍼런스의 홈페이지에 접속했다.
대형 포털 업체의 블로그 시스템을 이용한 페이지라 조금 실망했지만, 보통 이런 행사에 인력을 충분히 할당할 수 없음을 알기에 이해했다.&lt;/p&gt;
&lt;p&gt;하지만, 일정표를 거대한 이미지 파일 하나로 배포하는 것을 보고, 아쉬운 마음을 감출 수 없었다.
개발자 컨퍼런스라는 것이 단순히 발표를 듣고 끝내는 것이 아니라, 개발자 간 교류의 장이 되고 그 안에서 새로운 기회를 발견하는 것을 자주 목격했기에,
이를 위해 적절한 온라인 '시장'이 필요하다고 생각했다.&lt;/p&gt;
&lt;p&gt;늘 그렇듯 회사 일에 치여, 컨퍼런스에 참여하지도 못했고 '시장'도 만들지 못했다.
그리고 1년이 지나, 다시 한 번 같은 회사에서 개발자 컨퍼런스를 연다고 했을 때,
이번에는 좋은 세션도 많이 듣고, 다른 개발자들도 만나고 싶어 바로 참가신청을 했다.
헌데, 작년과 마찬가지로 올해도 같은 블로그 시스템에, PDF 형식으로 자료를 배포하는 것을 보니, 너무 안타까웠다. &lt;/p&gt;
&lt;p&gt;잡소리가 길었다. 그냥 이건 좀 아니다 싶었고, 그래서 만들기로 했다. 올해 배포된 자료를 보고 다음의 기능을 갖춘 팬 사이트를 만들면 좋겠다 싶었다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;태그가 제공되니, 태그에 맞춰 필터링하기.&lt;/li&gt;
&lt;li&gt;발표자의 홈페이지, 트위터 아이디 등의 기본 정보와 발표 자료, 비디오를 잘 모아보기.&lt;/li&gt;
&lt;li&gt;세션을 진행할 때 사용할 수 있도록, 질문 등을 댓글 기능을 통해 받을 수 있도록 하기.&lt;/li&gt;
&lt;li&gt;어떤 세션을 들을지 미리 체크해둘 수 있는 기능.&lt;/li&gt;
&lt;li&gt;가능하면 페이스북 그래프를 통해, 나랑 같은 세션을 들을 친구가 누구인지 확인하기.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;기술/구현에 대해서는 다음에 것들을 달성하고 싶었다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;모바일 기기에서 잘 보여지기. 단순히 잘 보여지는게 아니라, 정보의 누락을 최소화하기.&lt;/li&gt;
&lt;li&gt;댓글 플러그인을 도입해서, 부담을 줄이기.&lt;/li&gt;
&lt;li&gt;비밀번호 없이 이메일로 로그인하는 기능을 시도하기.&lt;/li&gt;
&lt;li&gt;Flat UI가 대세라고 하니, 이걸 한 번 써보기.&lt;/li&gt;
&lt;li&gt;Django를 너무 대충 써와서, Class-based View 등을 써보기.&lt;/li&gt;
&lt;li&gt;만든 코드를 공개하여, 그럭저럭 괜찮은 Django 샘플 코드로 활용되기.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;'하라는 일은 안하고' 작업을 시작했다. 작업하는 동안 화면을 종종 캡춰했고, 이를 정리해봤다.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;4월 11일&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;23:29&lt;/code&gt; 딸을 재우고 와이프가 TV를 보는 동안 작업을 시작했다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;23:29&lt;/code&gt; Github에 리포지터리를 생성했다. 리포지터리를 생성하는 것만으로도 뭔가 달성한 기분이 든다.
&lt;img alt="0411-01.jpg" src="./static/images/2013-04/0411-01.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;23:30&lt;/code&gt; &lt;code&gt;virtualenv&lt;/code&gt;를 통해 독립 공간을 마련하고, Django 1.5 를 설치했다. 일단 It worked.
&lt;img alt="0411-02.jpg" src="./static/images/2013-04/0411-02.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;23:35&lt;/code&gt; 자료를 훑어보며 모델을 어떻게 만들지 고민했다.
&lt;img alt="0411-03.jpg" src="./static/images/2013-04/0411-03.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;23:47&lt;/code&gt; &lt;code&gt;syncdb&lt;/code&gt;로 처음으로 데이터베이스를 생성했다. 
&lt;img alt="0411-04.jpg" src="./static/images/2013-04/0411-04.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;00:00&lt;/code&gt; PDF 자료를 확대하여 이미지를 일부 캡춰했다. 원래 아이콘이나 이미지가 있어야 작업이 잘 되니까 일단 쓸데없는 짓을 좀 했다.
&lt;img alt="0411-05.jpg" src="./static/images/2013-04/0411-05.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;00:07&lt;/code&gt; 자료를 보며 &lt;code&gt;Django admin&lt;/code&gt;을 통해 기초 데이터를 입력하기 시작했다. 갈 길이 멀다. 
&lt;img alt="0411-06.jpg" src="./static/images/2013-04/0411-06.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;00:17&lt;/code&gt; 머리가 나쁘니까 손발이 고생한다. 잘못 설계된 모델들을 수정하기 위해 &lt;code&gt;south&lt;/code&gt;를 설치하고 마이그레이션을 하기 시작했다.
머리가 나쁜 것을 탓하다 졸려서 잠들었다.
&lt;img alt="0411-07.jpg" src="./static/images/2013-04/0411-07.jpg" /&gt;&lt;/p&gt;
&lt;h2&gt;4월 12일&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;14:46&lt;/code&gt; 회사에 출근은 했는데, 마음은 밭에 가 있으니 오전 내내 싱숭생숭하다가, 점심 먹고 데이터 입력을 시작했다.
&lt;img alt="0412-01.jpg" src="./static/images/2013-04/0412-01.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;15:50&lt;/code&gt; 데이터 입력만 한 시간 내내 해서 드디어 입력을 끝냈다. 자동으로 긁는 도구를 만들까 하다가 그게 더 큰 일이 될게 뻔하니 관두고 몸빵했다. 
다 하고 나니 눈치가 보여서 회사 일을 좀 했다.
&lt;img alt="0412-02.jpg" src="./static/images/2013-04/0412-02.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;18:47&lt;/code&gt; 저녁을 회사에서 먹고 드디어 첫 템플릿 코드를 작성했다. 그냥 목록이 나오는거 뿐인데도 뿌듯했다. 
이후에 타임테이블용 템플릿 작업을 무지하게 했는데 머리가 잘 안돌아가서 걍 퇴근했다. 역시 야근... 아니 밤에 코딩하는건 효율이 나쁘다.
&lt;img alt="0412-03.jpg" src="./static/images/2013-04/0412-03.jpg" /&gt;&lt;/p&gt;
&lt;h2&gt;4월 13일 - 4월 14일&lt;/h2&gt;
&lt;p&gt;팬심이 아무리 강해도, 유부남의 주말은 가족과 함께 보낼 수 밖에 없다. 한 줄도 못 짜고 이틀이 지나갔다.&lt;/p&gt;
&lt;h2&gt;4월 15일&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;10:50&lt;/code&gt; 집에서 회사까지 약 5km 정도 되는데, 아침부터 뭔 바람이 불었는지 걸어서 출근했다. 
쉰냄새를 풍기면서 타임테이블 템플릿 코딩을 계속했다. 엉성하지만 출력되는 것을 보고 조금 감동했다. &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; 태그 따위에 말이지.
&lt;img alt="0415-01.jpg" src="./static/images/2013-04/0415-01.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;11:08&lt;/code&gt; 눈에 뭐가 보이니까, 장식 예술을 슬슬 하기 시작했다. 지난 주에 미리 캡춰해둔 이미지가 있어 끼워 넣으니 뭔가 그럴싸해졌다.
&lt;img alt="0415-02.jpg" src="./static/images/2013-04/0415-02.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;16:36&lt;/code&gt; 잉여짓만 하니까 또 미안한 마음이 들어, 잠깐 회사 일을 하는 척 하다, 또 장식 예술을 하고 있다.
아무래도 색상과 픽토그램이 같이 붙어 있는 이미지는 별론거 같아, 픽토그램만 떼어내고 색상 정보를 따로 입력하기로 했다.
나중에 모델에 색상 정보 넣었던 건 다시 버리고, 대신 클래스 이름을 넣고, 색상을 CSS 쪽으로 옮겼다. (휴-)
&lt;img alt="0415-03.jpg" src="./static/images/2013-04/0415-03.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;17:38&lt;/code&gt; 타임테이블에 태그 아이콘을 떼어내고 태그바를 붙였더니 한결 나아보였다. 하라는 코딩은 안하고 점점 CSS에 빠져들고 있다.
&lt;img alt="0415-04.jpg" src="./static/images/2013-04/0415-04.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;21:27&lt;/code&gt; 회사에서 밥을 먹고 네이게이션 바를 붙였다. 그냥 &lt;code&gt;Bootstrap&lt;/code&gt;보다는 역시 &lt;code&gt;Flat-UI&lt;/code&gt;가 힙해보인다, 는 착각이 든다.
너무 늦는거 같아 대충 열시에 정리하고 퇴각.
&lt;img alt="0415-05.jpg" src="./static/images/2013-04/0415-05.jpg" /&gt;&lt;/p&gt;
&lt;h2&gt;4월 16일&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;14:52&lt;/code&gt; 또 걸어서 출근했더니 오전이 쉰내와 함께 갑자기 사라지고 말았다! 아무튼 점심 먹고 또 CSS에 빠져들었다. 툴팁 붙이고 신났다!
이 때부터 &lt;code&gt;imgur&lt;/code&gt;에 올려서 IRC 에 링크도 올리고 했다. 슬슬 초기 버프가 떨어지고 재미가 없어지는 시점이었던거 같다.
&lt;img alt="0416-01.jpg" src="./static/images/2013-04/0416-01.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;17:23&lt;/code&gt; 짬짬히 템플릿 코딩을 계속했다. 동료의 어깨 너머로 배운 &lt;code&gt;Class based view&lt;/code&gt; 덕분에 뷰 코딩은 거의 안하고, 장식 예술에 빠질 수 있었다.
&lt;code&gt;moot.it&lt;/code&gt;이 &lt;code&gt;disqus&lt;/code&gt;보다 예뻐보여 일단 넣어보았다. 넣기 정말 쉽긴 한데, 나중에 폰 뷰에서 제대로 안나오고 페이스북 로그인만 지원해서 빼버렸다.
&lt;img alt="0416-02.jpg" src="./static/images/2013-04/0416-02.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;18:18&lt;/code&gt; 이제 대놓고 이것만 만들기 시작했다. 다음 주가 바로 컨퍼런스 일인데 너무 늦게 알리면 아무도 안 봐줄꺼고, 그러면 아쉬울까봐.
스타일이 대충 결정되고 나니 꾸미는데 속도가 좀 붙는다. 이 즈음에 태그를 눌러 필터링하는 기능이 추가되었다.
&lt;img alt="0416-03.jpg" src="./static/images/2013-04/0416-03.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;19:39&lt;/code&gt; 어설프게 만들고 놔두는거 싫어하는데, 마침 회식이 생겨 퇴각했다. 이날 술 먹고 체력이 저하되었ㄷㅈㅁ데ㅓㅐ러....
&lt;img alt="0416-04.jpg" src="./static/images/2013-04/0416-04.jpg" /&gt;&lt;/p&gt;
&lt;h2&gt;4월 17일&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;14:22&lt;/code&gt; 어제 만들다 놔둔 발표자 페이지를 꾸미기 시작했다. 트위터 아이디를 넣고 트위터 API로 프로필 이미지를 불러오도록 했다.
&lt;img alt="0417-01.jpg" src="./static/images/2013-04/0417-01.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;14:49&lt;/code&gt; 발표자 개인 페이지는 아직 넣을만한 내용이 별로 없어 한산하다. 아무튼 여기도 moot.it 넣고 마무리했다.
&lt;img alt="0417-02.jpg" src="./static/images/2013-04/0417-02.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;16:52&lt;/code&gt; 별로 중요하지도 않은 검색기능인데, 이걸 누군가에게 Django 데모 프로젝트로 보여주려면 꼭 있어야 겠다는 헛생각이 들어서,
&lt;code&gt;haystack&lt;/code&gt; 기본 백엔드로 일단 넣었다.
&lt;img alt="0417-03.jpg" src="./static/images/2013-04/0417-03.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;17:32&lt;/code&gt; 각 세부 페이지가 대충 마무리된 것 같아, 대문을 뚝딱 뚝딱 만들었다. 이미지는 조금만 쓰고 해당 컨퍼런스와 어울리게끔 만들었다.
나중에서야 깨닫게 되는 것지만, 이런 식으로 약간 그럴싸하게 만든게 문제가 아니었을까 싶다.
만들면서 계속 크기를 줄여가며 반응형 - 이 말을 별로 좋아하진 않지만 - 페이지로 계속 갈아 엎어 나갔다.
어제 술 먹고 늦게 들어온게 미안해, 퇴근하고 집에서 가족과 함께 시간을 보냈다.
&lt;img alt="0417-04.jpg" src="./static/images/2013-04/0417-04.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;24:01&lt;/code&gt; 집에 와서 아까 만든 페이지를 보며 뿌듯해 하려고 했는데, 계속 크롬으로 개발해서 그런지 파이어폭스 등에서 난리가 나고 있다는 걸 몰랐다.
&lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt; 태그에 &lt;code&gt;position: relative&lt;/code&gt; 가 안되는 걸 뒤늦게 깨닫고 멘붕. 이걸 해결하기 위해 자바스크립트를 끼얹는 만행을 저지르고 말았다.
테이블 셀 우하단에 발표자 이름과 회사 이름 위치시키는게 이렇게 어려울 줄이야. 이걸 새벽 3시까지 했다.
&lt;img alt="0417-05.jpg" src="./static/images/2013-04/0417-05.jpg" /&gt;&lt;/p&gt;
&lt;h2&gt;4월 18일&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;19:13&lt;/code&gt; 어젯 밤에 늦게 자서 아예 휴가를 내고 본격적으로 마무리 작업을 했다. 뭔가 많이 다듬긴 했는데 기억나는게 몇 개 없는건 왜일까.
사이트 자체 작업보다는, 회사 서버에 이걸 올려 실제 서비스하기 위한 준비를 했다.
아무튼 친구와 같이 커피숍에서 배터리 떨어질 때까지 작업하며 이메일로 로그인하기 기능의 기본을 다 만들었다. 
가족과 함께 저녁을 먹고 놀다가, favicon 을 만들고 일찍 잠들었다.
&lt;img alt="0418-01.jpg" src="./static/images/2013-04/0418-01.jpg" /&gt;&lt;/p&gt;
&lt;h2&gt;4월 19일&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;09:48&lt;/code&gt; 오늘은 무슨 일이 있어도 꼭 릴리즈해야 겠다는 마음이었으나, 버프가 완전히 떨어져 효율이 전혀 나지 않았다.
아무튼 꾸역 꾸역 코딩해서 자체 댓글 기능 붙이고, 프로필 페이지를 작성하고, &lt;code&gt;Redis&lt;/code&gt;를 통해 캐시도 사용하도록 했고,
&lt;code&gt;Google Analytics&lt;/code&gt;도 붙이는 등의 마무리 작업을 계속했다. 
&lt;img alt="0419-01.jpg" src="./static/images/2013-04/0419-01.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;17:26&lt;/code&gt; 드디어 실 서버에 배포하고 릴리즈했다. 아직 목표한 만큼 다 만들진 못했지만 오늘 릴리즈하지 않으면
알리기도 어렵고해서 대충 정리해서 배포한 다음, 트위터랑 IRC 등에 홍보를 조금 했다.
또한, 해당 컨퍼런스 담당 트위터 계정에도 멘션으로 팬 페이지를 만들었다고 알렸다.
&lt;img alt="0419-02.jpg" src="./static/images/2013-04/0419-02.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;18:06&lt;/code&gt; 사용자들이 들어오기 시작했다! 들뜬 마음으로 쳐다보다가 근처에 가족이 와서 저녁을 먹으러 조금 일찍 퇴근했다.
&lt;img alt="0419-03.jpg" src="./static/images/2013-04/0419-03.jpg" /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h1&gt;Afterwords&lt;/h1&gt;
&lt;p&gt;만들고자 했던 기능들 중, 페이스북 그래프 활용이나 자기가 듣고 싶은 세션을 체크하는 기능 등을 완성하진 못했다.
애초에 이 사이트를 만들려고 했던 것이 팬 페이지 만들어서 뭘 어떻게 해보겠다기 보다는,
어차피 앞으로 인하우스 도구를 만들 때 계속 쓸 것 같은 &lt;code&gt;Django&lt;/code&gt;를 좀 정리해서 제대로 써보고 싶었고,
그 과정에서 몇 가지 디자인을 해보고 싶었던 점이 크다. 그 와중에 명확한 목표나 데이터가 없으면 금방 흐지부지 그만둘 것이 뻔하고,
마침 가고 싶었던 컨퍼런스를 위한 사이트가 마땅히 없는 상태에서 잘 만들면 일석 이조가 될 것이라 생각했다.&lt;/p&gt;
&lt;p&gt;하지만 담당자로부터 컨퍼런스와 관련된 자료를 이용한 2차 저작물 제작을 허용하지 않는다는 얘기와 함께, 사이트를 내려 달라는 요청을 듣고,
오픈했던 팬 페이지를 서너시간 만에 닫을 수 밖에 없었다. 이해는 가지만 아쉬운 마음은 숨기기 어려운 것 같다.&lt;/p&gt;
&lt;p&gt;근 일주일 동안 즐겁게 작업했고, 간만에 원없이 CSS 질 한 것으로 만족해야겠다. 잠이 오지 않아, 뒤늦게 쓰려고 했던 제작 후기 글을 본의 아니게 일찍 쓰게 되었다.&lt;/p&gt;
&lt;p&gt;Github link: &lt;a href="https://github.com/lqez/ndc13"&gt;https://github.com/lqez/ndc13&lt;/a&gt;&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</summary><category term="django"></category><category term="surplus"></category></entry><entry><title>Sync LDAP to Google Apps account via GADS</title><link href="http://lqez.github.io/blog/sync-ldap-to-google-apps-account-via-gads.html" rel="alternate"></link><updated>2013-02-26T00:00:00+09:00</updated><author><name></name></author><id>tag:lqez.github.io/blog,2013-02-26:sync-ldap-to-google-apps-account-via-gads.html</id><summary type="html">&lt;p&gt;Google은 - 친절하게도 - Google Apps 계정을 외부 서버와 동기화할 수 있는 기능을 제공할 뿐 아니라, 이를 위한 도구도 배포하고 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://support.google.com/a/bin/answer.py?answer=172212"&gt;Google Apps Migration for Microsoft Exchange&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://support.google.com/a/bin/answer.py?answer=106368"&gt;Google Apps Directory Sync&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://support.google.com/a/bin/answer.py?answer=2611842"&gt;Google Apps Password Sync&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;스마트스터디는 사내 계정을 이미 LDAP으로 통합 운용중이라서, Google Apps Directory Sync(이하 GADS)를 선택하였다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.google.com/support/enterprise/static/gapps/docs/admin/en/gads/admin/"&gt;Google Apps Directory Sync Administration Guide(in PDF)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;GADS는 단방향 즉, LDAP에서 GADS로의 동기화만을 제공한다. 동기화 가능한 항목은 아래와 같다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Organizational Units&lt;/li&gt;
&lt;li&gt;Users Accounts&lt;/li&gt;
&lt;li&gt;Groups&lt;/li&gt;
&lt;li&gt;User Profiles&lt;/li&gt;
&lt;li&gt;Shared Contacts&lt;/li&gt;
&lt;li&gt;Calendar Resources&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;GADS Configuration Tool은 자바를 이용한 GUI로 작성되어 있는데, 현재는 Windows / Linux 용만 제공된다. 이 툴을 통해 설정한 내용은 XML로 저장되고, 이 파일은 플랫폼 무관하게 사용할 수 있으므로, 일단 가상 머신의 Windows로 설정을 완료한 후에, 설정 파일을 복사하여 Linux에서 사용하였다.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Screen Shot of GADS" src="./static/images/gads_01.png" /&gt;&lt;/p&gt;
&lt;p&gt;Linux용 GADS는 커맨드라인에서 설치하면 동의항목이 HTML로 출력되지만, 계속 엔터키를 입력해 넘기며 진행하면 설치가 가능하다.
root 계정으로 설치하는 경우에 /usr/local/GoogleAppsDirSync 에 설치가 되고, 이 디렉토리 아래에 있는 &lt;code&gt;sync-cmd&lt;/code&gt; 쉘 스크립트를 통해 동기화를 수행하면 된다.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sync&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;configuration_file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xml&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;위와 같이 실행하면 비교만 하고, 실제로 동기화는 하지 않는 dry-run으로 실행되고,&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sync&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;configuration_file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xml&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;-a&lt;/code&gt; 옵션을 추가해야 실제 동기화가 이뤄진다. 현재는 위 명령을 cron에 넣어 5분 마다 동기화 하도록 설정해두었다.&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</summary><category term="ldap"></category><category term="google"></category><category term="gads"></category><category term="sync"></category></entry><entry><title>Build vim with language support via Homebrew</title><link href="http://lqez.github.io/blog/build-vim-with-language-support-via-homebrew.html" rel="alternate"></link><updated>2013-02-20T00:00:00+09:00</updated><author><name></name></author><id>tag:lqez.github.io/blog,2013-02-20:build-vim-with-language-support-via-homebrew.html</id><summary type="html">&lt;p&gt;Mac OS X에 기본 설치된 vim은 다른 언어를 위한 지원 옵션 없이 빌드되어, &lt;a href="https://github.com/klen/python-mode"&gt;python-mode&lt;/a&gt; 등을 사용할 수 없다.&lt;/p&gt;
&lt;p&gt;다행히도, Homebrew에 포함된 &lt;a href="https://github.com/mxcl/homebrew/blob/master/Library/Formula/vim.rb"&gt;vim.rb&lt;/a&gt;는 언어 지원을 위한 옵션을 포함하고 있어, 이를 이용해 편리하게 설치가 가능하다. 아래 명령으로 지원하는 옵션을 확인할 수 있다.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;brew&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt; &lt;span class="n"&gt;vim&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Python 지원을 포함하려면 아래와 같이 설치한다.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;brew&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;vim&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;vim.rb의 &lt;a href="https://github.com/mxcl/homebrew/blob/master/Library/Formula/vim.rb#L25"&gt;25-31L&lt;/a&gt;를 보면, &lt;code&gt;--with-&amp;lt;language&amp;gt;&lt;/code&gt; 옵션은 configure 시에 &lt;code&gt;--enable-&amp;lt;language&amp;gt;interp&lt;/code&gt; 옵션으로 변경된다.&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</summary><category term="vim"></category><category term="python"></category><category term="homebrew"></category></entry></feed>