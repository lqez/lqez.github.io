<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Feature creep designer</title><link href="https://lqez.github.io/blog/" rel="alternate"></link><link href="https://lqez.github.io/blog/feeds/2017-12.atom.xml" rel="self"></link><id>https://lqez.github.io/blog/</id><updated>2017-12-20T00:00:00+09:00</updated><entry><title>Threaded Generator in Python</title><link href="https://lqez.github.io/blog/threaded-generator-in-python.html" rel="alternate"></link><published>2017-12-20T00:00:00+09:00</published><author><name></name></author><id>tag:lqez.github.io,2017-12-20:blog/threaded-generator-in-python.html</id><summary type="html">&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Command-line_interface"&gt;커맨드라인 인터페이스(CLI)&lt;/a&gt;를 가진 프로그램을 만들면서 &lt;a href="https://en.wikipedia.org/wiki/Asynchronous_I/O"&gt;비동기 처리&lt;/a&gt;를 시도한 적이 없었다.
대부분 선택지를 출력한 후에 사용자로부터 값을 입력받으면 다음 동작을 수행하는 것을 반복하기 때문에 일반적인 &lt;a href="https://en.wikipedia.org/wiki/Thread_(computing)#Single_threading"&gt;단일 스레드&lt;/a&gt;로 작성해왔다.&lt;/p&gt;
&lt;p&gt;이번에 만든 CLI 프로그램인 &lt;a href="https://github.com/lqez/rogrepos"&gt;rogrepos&lt;/a&gt;는 GitHub에서 오픈소스 활동을 오래 하다 보면
수정사항을 작성하기 위한 목적으로 &lt;a href="https://en.wikipedia.org/wiki/Fork_(software_development)"&gt;포크&lt;/a&gt;했다가
더는 사용되지 않고 방치된 저장소들이 쌓이는데, 이들을 손쉽게 정리하기 위한 도구이다.&lt;/p&gt;
&lt;p&gt;GitHub에서 저장소를 삭제하기 위해서는 확인 및 안전 차원에서 저장소 이름을 다시 한 번 입력받도록 하고 있는데,
정리해야 하는 저장소가 많으면 이 작업을 반복하는 것이 여간 귀찮은 일이 아니다.
rogrepos를 처음에는 기존처럼 비동기 처리 없이 단일 스레드로 작성하였는데 &lt;a href="https://developer.github.com/"&gt;GitHub API&lt;/a&gt; 호출이 여간 느린 게 아니라,
실제로 쓰기에는 실용적이지 못했다. 저장소 목록을 얻어오는 것은 오래 걸리더라도 한 번 기다리면 되니까 괜찮지만,
포크된 저장소인지 여부 등 정보를 추가로 얻어오려면 매번 기다려야 하는 것이 문제였다.&lt;/p&gt;
&lt;p&gt;이 문제를 코드를 조금만 고치면서 쓸만하게 만들려고 찾아같은보니, 반복문으로 작성된 코드를 &lt;a href="https://en.wikipedia.org/wiki/Generator_(computer_programming)"&gt;제너레이터&lt;/a&gt;를 사용하도록 고치고
제너레이터를 다른 스레드에서 채우도록 변경하는 것이 좋아 보였다.
값을 생성하고 사용할 때에 문제가 없도록 스레드에 안전한 &lt;a href="https://docs.python.org/3/library/queue.html"&gt;큐(Queue)&lt;/a&gt;를 사용하면 기존의 동기 코드를 크게 건드리지 않고 백그라운드에서 추가 작업을 진행할 수 있다.
이와 같은 동작을 Threaded Generator라는 이름으로 만들어놓은 &lt;a href="https://gist.github.com/everilae/9697228"&gt;코드 조각(gist)&lt;/a&gt;이 있어,
rogrepos에서 &lt;a href="https://github.com/lqez/rogrepos/blob/5513ea4e1b699c64d0c98c54afd8e7849c804673/rogrepos/rogrepos.py#L10-L32"&gt;사용&lt;/a&gt;했다.&lt;/p&gt;
&lt;p&gt;rogrepos는 아래와 같이 동작하며, 메인 스레드는 사용자 입력을 기다리는 &lt;code&gt;[y/N]&lt;/code&gt; 부분에서 멈추지만,
다른 스레드에서 저장소를 탐색하며 추가 정보를 계속해서 불러오므로 다음 선택지로 넘어갈 때 사용자 입장에서는 지연을 덜 느끼게 된다.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ rogrepos
Retrieving organizations from GitHub...

    KeyCastr, &lt;span class="m"&gt;1&lt;/span&gt; public repo&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)&lt;/span&gt;, &lt;span class="m"&gt;0&lt;/span&gt; private repo&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)&lt;/span&gt;
    Summernote, &lt;span class="m"&gt;12&lt;/span&gt; public repo&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)&lt;/span&gt;, &lt;span class="m"&gt;0&lt;/span&gt; private repo&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)&lt;/span&gt;

Retrieving &lt;span class="m"&gt;122&lt;/span&gt; repositories from GitHub...

&lt;span class="m"&gt;97&lt;/span&gt; of 122
lqez/yuna
    Description: yuna
    Updated    : 2013-11-27 16:13:40 / &lt;span class="m"&gt;1477&lt;/span&gt; day&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)&lt;/span&gt; ago
    Size       : &lt;span class="m"&gt;100&lt;/span&gt; KB
    Do you really want to delete? &lt;span class="o"&gt;[&lt;/span&gt;y/N&lt;span class="o"&gt;]&lt;/span&gt;: y
    This is not a forked project. Are you sure? &lt;span class="o"&gt;[&lt;/span&gt;y/N&lt;span class="o"&gt;]&lt;/span&gt;: y
lqez/yuna was deleted.
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;p&gt;최초의 코드는 아래와 같았다.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;for repo in github.get_user().get_repos():
    # do something
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;이를 제너레이터로 바꾸면 아래와 같이 바뀌고,&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;def generator_repos(github):
    for repo in github.get_user().get_repos():
        yield repo

for repo in generator_repos(github):
    # do something
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;위에서 작성한 Threaded generator로 바꾼 것이 현재의 상태다.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;for repo in ThreadedGenerator(generator_repos(github)):
    # do something
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;반복문 내에 느린 동작이 자주 포함되는 CLI 도구에서는 반복적으로 사용해볼만한 패턴이라고 생각된다.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;덧) 위 프로젝트를 &lt;a href="https://www.reddit.com/r/github/comments/7jporl/"&gt;/r/github&lt;/a&gt;에 올렸는데, 저장소는 지워져서는 안된다는 의견과
&lt;a href="https://www.reddit.com/r/github/comments/7jporl/rogrepos_remove_outdated_github_repositories_in/"&gt;&lt;code&gt;No Maintenance Intended&lt;/code&gt;&lt;/a&gt; 배지에 대한 댓글이 달렸다.&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</summary></entry></feed>